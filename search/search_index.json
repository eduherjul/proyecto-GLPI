{"config":{"lang":["es"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Descripci\u00f3n","text":"<p>Proyecto-final ciclo ASIX: Proyecto SIGEI-GLPI</p>"},{"location":"Proyecto_final_git/AWS_SRV-Ubuntu_script/","title":"AWS SRV Ubuntu script","text":"<pre><code>#!/bin/bash\n\n#Ejecutaremos el script AWS_SRV-Ubuntu_script.sh\n\n# Instalamos la pila LAMP (apache2-mariadb-php) sin GLPI\n\n#Instalaci\u00f3n de dialog\nsudo apt update\nsudo apt install dialog -y\n\n#Funci\u00f3n para capturar el c\u00f3digo de retorno del di\u00e1logo\nfunction acabar() {\n  exit_status=$?\n  # Verificar si se seleccion\u00f3 \"Cancelar\"\n  if [ $exit_status -ne 0 ]; then\n    clear\n    echo \"Operaci\u00f3n cancelada\"\n    exit 1\n  fi\n}\n\n#Actualizamos el sistema\ndialog --title \"Actualizaci\u00f3n del sistema update-upgrade\" \\\n  --yesno \"\u00bfActualizamos?\" 0 0\nans=$?\nif [ $ans -eq 0 ]; then\n  clear\n  sudo apt dist-upgrade -y &amp;&amp; sudo apt autoremove -y\nfi\n\n##### APARTADO APACHE ##########\n\n#Instalamos Apache2\nclear\nsudo apt install apache2 -y\n\n#Realizamos un backup de nuestro 000-defaults.conf\nsudo mv /etc/apache2/sites-available/000-default.conf /etc/apache2/sites-available/000-default.conf.bkp\n\n#Creamos un archivo de configuraci\u00f3n para el sitio de GLPI en Apache\necho \"&lt;VirtualHost *:80&gt;\n        ServerName edu.com\n        DocumentRoot /var/www/glpi/public\n\n        &lt;Directory /var/www/glpi/public&gt;\n            Options Indexes FollowSymLinks\n            AllowOverride All\n            Require all granted\n            RewriteEngine On\n            # Redirect all requests to GLPI router, unless file exists.\n            RewriteCond %{REQUEST_FILENAME} !-f\n            RewriteRule ^(.*)$ index.php [QSA,L]\n        &lt;/Directory&gt;\n\n        ErrorLog ${APACHE_LOG_DIR}/error.log\n        CustomLog ${APACHE_LOG_DIR}/access.log combined\n\n&lt;/VirtualHost&gt;\" | sudo tee /etc/apache2/sites-available/glpi.conf\n\n#Habilitamos el archivo .conf que hemos creado y habilitamos el modulo rewrite\n#Recargamos, activamos y reiniciamos apache2.service\nsudo a2ensite glpi.conf\nsudo a2enmod rewrite\nsudo systemctl reload apache2.service\nsudo systemctl enable apache2.service\nsudo systemctl restart apache2.service\n\n##### APARTADO PHP #############\n\n#Instalamos los repositorios de php y actualizaremos\nsudo apt install software-properties-common apt-transport-https -y\nsudo add-apt-repository ppa:ondrej/php -y\nsudo apt update -y &amp;&amp; sudo apt dist-upgrade -y &amp;&amp; sudo apt autoremove -y\n\n#Poner la \u00faltima versi\u00f3n de php compatible con la version de GLPI\nversion_php=$(dialog --title \"Poner los 2 d\u00edgitos de la \u00faltima version de php compatible\" \\\n  --backtitle \"Revise la documentaci\u00f3n oficial de GLPI\" \\\n  --stdout \\\n  --inputbox \"(ejemplo:8.1)\" 0 0)\n#Llamo a la funcion:\nacabar\n\n#Instalamos la versi\u00f3n de php, reiniciamos\nclear\nsudo apt install php\"$version_php\" php\"$version_php\"-cli php\"$version_php\"-common libapache2-mod-php\"$version_php\" libapache2-mod-fcgid php\"$version_php\"-fpm -y\nsudo systemctl restart apache2.service\n\n#Habilitamos funciones instaladas de php, activamos \"session.cookie_httponly\", habilitamos la funci\u00f3n fpm y recargamos-reiniciamos\nsudo a2enmod proxy_fcgi setenvif\nsudo sed -i '1432s/.*/session.cookie_httponly = on/' /etc/php/\"$version_php\"/fpm/php.ini\nsudo systemctl restart php\"$version_php\"-fpm\nsudo a2enconf php\"$version_php\"-fpm\nsudo systemctl reload apache2.service\nsudo systemctl restart apache2.service\n\n#Instalamos la extensiones (dependencias) que vamos a necesitar para glpi\nsudo apt install -y php\"$version_php\"-{curl,gd,imagick,intl,apcu,memcache,imap,mysqli,ldap,tidy,xmlrpc,pspell,gettext,mbstring,fpm,iconv,xml,xsl,bz2,Phar,zip,exif}\n\n##### APARTADO MARIADB ###############\n\n#Instalamos MariaDB y securizamos (nos permitir\u00e1 poner contrase\u00f1a a la cuenta root de mariaDB)\nsudo apt install mariadb-server -y\n\n#Aviso\ndialog --title \"mysql_secure_installation\" \\\n       --msgbox \"Enter-n-y-Enter_pass-Re_enter_pass-y-y-y-y\" 0 0\nclear       \nsudo mysql_secure_installation\n\n#Creamos una BBDD para GLPI y el usuario con contrase\u00f1a en mariadb-server tambi\u00e9n para la GLPI que exportamos\nnomuser=$(dialog --title \"Creamos el usuario para la BBDD\" \\\n  --backtitle \"Debe ser el mismo que en la BBDD que exportaremos\" \\\n  --stdout \\\n  --inputbox \"Nombre\" 0 0)\n#Llamo a la funcion:\nacabar\n\npassuser=$(dialog --title \"Contrase\u00f1a para el nuevo usuario de GLPI\" \\\n  --stdout \\\n  --inputbox \"Password\" 0 50)\n#Llamo a la funci\u00f3n:\nacabar\nclear\n\n#Ahora creamos la BBDD (glpi), un nuevo usuario para GLPI, damos privilegios y activamos la zona horaria en mysql\nsqlcomandosphp=\"create database glpi; \ncreate user '$nomuser'@'%' identified by '$passuser';\nGRANT ALL PRIVILEGES ON glpi.* TO '$nomuser'@'%';\nGRANT SELECT ON mysql.time_zone_name TO '$nomuser'@'%';\nflush privileges;\"\n\n#Ejecutamos los comandos SQL en mysql\ndialog --title \"Creamos la BBDD con nombre \\\"glpi\\\" para GLPI y el usuario \\\"$nomuser\\\"\" \\\n  --msgbox \"Introducimos la contrase\u00f1a de root \" 0 0\nclear\nsudo mysql -u root -p -e \"$sqlcomandosphp\"\n\n#Cargamos las ZONAS HORARIAS DEL SISTEMA\ndialog --title \"Cargamos las zonas horarias del sistema\" \\\n  --msgbox \"Introducimos la contrase\u00f1a de root \" 0 0\nclear\nsudo mysql_tzinfo_to_sql /usr/share/zoneinfo | sudo mysql -u root -p mysql\nexit 0\n</code></pre>"},{"location":"Proyecto_final_git/GLPI_script/","title":"GLPI script","text":"<pre><code>#!/bin/bash\n\n#Script para la instalaci\u00f3n de una pila LAMP (apache2-mariadb-php) y GLPI\n\n#Instalaci\u00f3n de dialog\nsudo apt install dialog -y\n\n#Funci\u00f3n para capturar el c\u00f3digo de retorno del di\u00e1logo\nfunction acabar() {\n  exit_status=$?\n  # Verificar si se seleccion\u00f3 \"Cancelar\"\n  if [ $exit_status -ne 0 ]; then\n    clear\n    echo \"Operaci\u00f3n cancelada\"\n    exit 1\n  fi\n}\n\n#Actualizamos el sistema\ndialog --title \"Actualizaci\u00f3n del sistema update-upgrade\" \\\n  --yesno \"\u00bfActualizamos?\" 0 0\nans=$?\nif [ $ans -eq 0 ]; then\n  clear\n  sudo apt update -y &amp;&amp; sudo apt dist-upgrade -y &amp;&amp; sudo apt autoremove -y\nfi\n\n##### APARTADO APACHE ##########\n\n#Instalamos Apache2\nclear\nsudo apt install apache2 -y\n\n#Realizamos un backup de nuestro 000-defaults.conf\nsudo mv /etc/apache2/sites-available/000-default.conf /etc/apache2/sites-available/000-default.conf.bkp\n\n#Creamos un archivo de configuraci\u00f3n para el sitio de GLPI en Apache\necho \"&lt;VirtualHost *:80&gt;\n        ServerName edu.com\n        DocumentRoot /var/www/glpi/public\n\n        &lt;Directory /var/www/glpi/public&gt;\n            Options Indexes FollowSymLinks\n            AllowOverride All\n            Require all granted\n            RewriteEngine On\n            # Redirect all requests to GLPI router, unless file exists.\n            RewriteCond %{REQUEST_FILENAME} !-f\n            RewriteRule ^(.*)$ index.php [QSA,L]\n        &lt;/Directory&gt;\n\n        ErrorLog \\${APACHE_LOG_DIR}/error.log\n        CustomLog \\${APACHE_LOG_DIR}/access.log combined\n\n&lt;/VirtualHost&gt;\" | sudo tee /etc/apache2/sites-available/glpi.conf\n\n#Habilitamos el archivo .conf que hemos creado y habilitamos el modulo rewrite\n#Recargamos, activamos y reiniciamos apache2.service\nsudo a2ensite glpi.conf\nsudo a2enmod rewrite\nsudo systemctl reload apache2.service\nsudo systemctl enable apache2.service\nsudo systemctl restart apache2.service\n\n##### APARTADO PHP #############\n\n#Instalamos los repositorios de php y actualizaremos\nsudo apt install software-properties-common apt-transport-https -y\nsudo add-apt-repository ppa:ondrej/php -y\nsudo apt update -y &amp;&amp; sudo apt dist-upgrade -y &amp;&amp; sudo apt autoremove -y\n\n#Poner la \u00faltima versi\u00f3n de php compatible con la version de GLPI\nversion_php=$(dialog --title \"Poner los 2 d\u00edgitos de la \u00faltima version de php compatible\" \\\n  --backtitle \"Revise la documentaci\u00f3n oficial de GLPI\" \\\n  --stdout \\\n  --inputbox \"(ejemplo:8.1)\" 0 0)\n#Llamo a la funcion:\nacabar\n\n#Instalamos la \u00faltima versi\u00f3n de php, reiniciamos\nclear\nsudo apt install php\"$version_php\" php\"$version_php\"-cli php\"$version_php\"-common libapache2-mod-php\"$version_php\" libapache2-mod-fcgid php\"$version_php\"-fpm -y\nsudo systemctl restart apache2.service\n\n#Habilitamos funciones instaladas de php, activamos \"session.cookie_httponly\", habilitamos la funci\u00f3n fpm y recargamos-reiniciamos\nsudo a2enmod proxy_fcgi setenvif\nsudo sed -i '1432s/.*/session.cookie_httponly = on/' /etc/php/\"$version_php\"/fpm/php.ini\nsudo systemctl restart php\"$version_php\"-fpm\nsudo a2enconf php\"$version_php\"-fpm\nsudo systemctl reload apache2.service\nsudo systemctl restart apache2.service\n\n#Instalamos la extensiones (dependencias) que vamos a necesitar para glpi\nsudo apt install -y php\"$version_php\"-{curl,gd,imagick,intl,apcu,memcache,imap,mysqli,ldap,tidy,xmlrpc,pspell,gettext,mbstring,fpm,iconv,xml,xsl,bz2,Phar,zip,exif}\n\n##### APARTADO MARIADB ###############\n\n#Instalamos MariaDB y securizamos (nos permitir\u00e1 poner contrase\u00f1a a la cuenta root de mariaDB)\nsudo apt install mariadb-server -y\n\n#Aviso\ndialog --title \"mysql_secure_installation\" \\\n       --infobox \"Enter-n-y-Enter_pass-Re_enter_pass-y-y-y-y\" 0 0\nclear       \nsudo mysql_secure_installation\n\n#Creamos una BBDD para GLPI y un nuevo usuario con contrase\u00f1a en mariadb-server tambi\u00e9n para GLPI\nnomuser=$(dialog --title \"Creamos el usuario para la BBDD\" \\\n  --stdout \\\n  --inputbox \"Nombre\" 0 0)\n#Llamo a la funcion:\nacabar\n\npassuser=$(dialog --title \"Contrase\u00f1a para el nuevo usuario de GLPI\" \\\n  --stdout \\\n  --inputbox \"Password\" 0 50)\n#Llamo a la funci\u00f3n:\nacabar\nclear\n\n#Ahora creamos la BBDD (glpi), un nuevo usuario para GLPI, damos privilegios y activamos la zona horaria en mysql\nsqlcomandosphp=\"create database glpi; \ncreate user '$nomuser'@'localhost' identified by '$passuser';\nGRANT ALL PRIVILEGES ON glpi.* TO '$nomuser'@'localhost';\nGRANT SELECT ON mysql.time_zone_name TO '$nomuser'@'localhost';\nflush privileges;\"\n\n#Ejecutamos los comandos SQL en mysql\ndialog --title \"Creamos la BBDD con nombre \\\"glpi\\\" para GLPI y el usuario \\\"$nomuser\\\"\" \\\n  --msgbox \"Introducimos la contrase\u00f1a de root \" 0 0\nclear\nsudo mysql -u root -p -e \"$sqlcomandosphp\"\n\n##### APARTADO GLPI ###############\n\n#Poner la \u00faltima versi\u00f3n de glpi\nversion_glpi=$(dialog --title \"Poner los 3 d\u00edgitos de la \u00faltima version de GLPI\" \\\n  --backtitle \"Revise la documentaci\u00f3n oficial de  GLPI\" \\\n  --stdout \\\n  --inputbox \"(ejemplo:10.0.1)\" 0 0)\n#Llamo a la funcion:\nacabar\n\n#Descarga de glpi\nclear\nwget https://github.com/glpi-project/glpi/releases/download/\"$version_glpi\"/glpi-\"$version_glpi\".tgz\n\n#Descomprimimos, cambiamos el fichero .tgz a /var/wwww/html, eliminamos el index.html y el .tgz\nsudo tar -zxvf glpi-\"$version_glpi\".tgz -C /var/www/\nsudo rm -rf glpi-\"$version_glpi\".tgz \nsudo rm -rf /var/www/html/index.html\n\n#Damos permisos\nsudo chown -R www-data:www-data /var/www/glpi\nsudo chmod -R 755 /var/www/glpi\n\n#Cargamos las ZONAS HORARIAS DEL SISTEMA\ndialog --title \"Cargamos las zonas horarias del sistema\" \\\n  --msgbox \"Introducimos la contrase\u00f1a de root \" 0 0\nclear\nsudo mysql_tzinfo_to_sql /usr/share/zoneinfo | sudo mysql -u root -p mysql\n\n#Actualizar campos de fecha y hora obsoletos en la BBDD\nsudo php /var/www/glpi/bin/console migration:timestamps -y\n\n#Aviso\ndialog --title \"Cuando se inicialize la BBDD, por razones de seguridad, por favor elimine el archivo: \\\"install/install.php\\\"\" \\\n       --msgbox \"sudo rm -rf /var/www/glpi/install/install.php\" 0 0\n\n########Preguntamos si queremos cambiar los LOGOTIPOS DE GLPI###########\ndialog --title \"Cambiar los logotipos de GLPI\" \\\n       --backtitle \"Debe tener el logo-master en el $HOME del servidor\" \\\n  --yesno \"\u00bfQuieres?\" 0 0\nans=$?\nif [ $ans -eq 0 ]; then\n  clear\n  #Llamo a la funci\u00f3n:\n  acabar\n\n  sudo apt install imagemagick -y\n\n  #Funci\u00f3n listar el nombre del logo-master\n  ellogo=$(dialog --title \"Listado de los elementos del $HOME\" \\\n    --backtitle \"Utilizar las flechas de direcci\u00f3n para seleccionar y la barra espaciadora para confirmar la selecci\u00f3n\" \\\n    --stdout \\\n    --fselect \"$HOME\"/ 20 120)\n  #Llamo a la funcion:\n  acabar\n\n  #Hacemos un backup de los logos originales de la aplicaci\u00f3n\n  sudo mv /var/www/glpi/pics/favicon.ico /var/www/glpi/pics/favicon.ico.bkp\n  sudo mv /var/www/glpi/pics/logos/logo-GLPI-100-white.png /var/www/glpi/pics/logos/logo-GLPI-100-white.png.bkp\n  sudo mv /var/www/glpi/pics/logos/logo-GLPI-250-black.png /var/www/glpi/pics/logos/logo-GLPI-250-black.png.bkp\n\n  #Creamos los logos con los tama\u00f1os requeridos (pixeles) que vamos a necesitar\n  unlogo=$(basename \"$ellogo\")\n  sudo convert \"$unlogo\" -resize 32x32\\! favicon.ico\n  sudo convert \"$unlogo\" -resize 100x55\\! logo-GLPI-100-white.png\n  sudo convert \"$unlogo\" -resize 220x130\\! logo-GLPI-250-black.png\n\n  #Cambiamos los permisos a 755\n  sudo chmod 755 favicon.ico\n  sudo chmod 755 logo-GLPI-100-white.png\n  sudo chmod 755 logo-GLPI-250-black.png\n\n  #Copiamos los ficheros de imagen creados de los logos a sus respectivas rutas\n  sudo cp favicon.ico /var/www/glpi/pics/\n  sudo cp logo-GLPI-100-white.png /var/www/glpi/pics/logos/\n  sudo cp logo-GLPI-250-black.png /var/www/glpi/pics/logos/\n\n  #Cambiamos el propietario y el grupo a www-data\n  sudo chown www-data:www-data /var/www/glpi/pics/favicon.ico\n  sudo chown www-data:www-data /var/www/glpi/pics/favicon.ico.bkp\n  sudo chown www-data:www-data /var/www/glpi/pics/logos/logo-GLPI-100-white.png\n  sudo chown www-data:www-data /var/www/glpi/pics/logos/logo-GLPI-100-white.png.bkp\n  sudo chown www-data:www-data /var/www/glpi/pics/logos/logo-GLPI-250-black.png\n  sudo chown www-data:www-data /var/www/glpi/pics/logos/logo-GLPI-250-black.png.bkp\nfi\nclear\nexit 0\n</code></pre>"},{"location":"Proyecto_final_git/glpi_backuplocal/","title":"Glpi backuplocal","text":"<pre><code>#!/bin/bash\n\n#*********Script para hacer un backup en local******************\n\n# -------------------- CONFIGURACI\u00d3N CAMBIAR LOS DATOS DEL USUARIO PERTINENTE--------------------\nusuariodb=\"edu\"\npassdb=\"123\"\nbackupDir=\"/home/yo/glpi_backups\"\nfecha=$(date +'%Y-%m-%d_%H-%M-%S')\n# ------------------------------------------------------\n\n# Crear carpeta si no existe\nmkdir -p \"$backupDir\"\n\n# 1. Backup de la base de datos\nDB_BACKUP=\"$backupDir/glpi_db_$fecha.sql\"\nmysqldump --user=\"$usuariodb\" --password=\"$passdb\" glpi &gt; \"$DB_BACKUP\"\ngzip \"$DB_BACKUP\"\n\n# 2. Backup de los archivos GLPI\nGLPI_BACKUP=\"$backupDir/glpi_files_$fecha.tar.gz\"\nsudo tar -czvf \"$GLPI_BACKUP\" /var/www/glpi\n\n# 3. Borrar backups antiguos de m\u00e1s de 15 d\u00edas\nfind \"$backupDir\" -type f -mtime +15 -delete\n\necho \"Copia local realizada correctamente\" | logger -t glpi_backuplocal.sh\n\nexit 0\n</code></pre>"},{"location":"Proyecto_final_git/mdpdf%20/","title":"Mdpdf","text":"<pre><code>#!/bin/bash\n\n#Script que convierte un archivo Markdown a PDF con formato espec\u00edfico\n# Verificar que se pas\u00f3 al menos un argumento\nif [ $# -ne 1 ]; then\n  echo \"Uso: $0 nombre_base (por ejemplo: proyecto)\"\n  exit 1\nfi\n\n# Asignar nombre base\nBASENAME=\"$1\"\nINPUT=\"${BASENAME}.md\"\nOUTPUT=\"${BASENAME}.pdf\"\n\n# Ejecutar Pandoc con las opciones deseadas\npandoc \"$INPUT\" -o \"$OUTPUT\" \\\n  --from markdown \\\n  --template eisvogel.latex \\\n  --pdf-engine=lualatex \\\n  --listings \\\n  --toc --toc-depth=5\n\n# Mensaje de \u00e9xito\necho \"PDF generado: $OUTPUT\"\n\nexit 0\n</code></pre>"},{"location":"Proyecto_final_git/proyecto_final/","title":"PROYECTO FINAL DEL CICLO ASIX (Proyecto SIGEI-GLPI)","text":""},{"location":"Proyecto_final_git/proyecto_final/#1-introduccion-del-proyecto","title":"1 - Introducci\u00f3n del proyecto","text":""},{"location":"Proyecto_final_git/proyecto_final/#11-descripcion-del-proyecto","title":"1.1 - Descripci\u00f3n del proyecto","text":"<ul> <li>El presente proyecto tiene por objeto crear una aplicaci\u00f3n web de C\u00f3digo abierto que permita llevar el control de los equipos inform\u00e1ticos del Instituto JaumeII El Just y sobre todo mantener un historial ordenado de todo lo que ocurre con el soporte t\u00e9cnico.</li> </ul>"},{"location":"Proyecto_final_git/proyecto_final/#12-objetivos-del-proyecto","title":"1.2 - Objetivos del proyecto","text":"<ul> <li>Tener un inventario completo de los dispositivos tecnol\u00f3gicos del centro.</li> <li>Gestionar incidencias o problemas t\u00e9cnicos de manera ordenada.</li> <li>Crear c\u00f3digos QR para gestionar puntualmente v\u00eda m\u00f3vil esas incidencias o consultas.</li> <li>Asignar tareas v\u00eda email al grupo de Mantenimiento y hacer seguimiento de su resoluci\u00f3n.</li> <li>Obtener reportes \u00fatiles sobre el estado del sistema y los equipos.</li> <li>Mejorar la atenci\u00f3n al profesorado y alumnado interno del centro.</li> </ul>"},{"location":"Proyecto_final_git/proyecto_final/#2-analisis-de-opciones-y-requisitos-vistos-para-considerar","title":"2 - An\u00e1lisis de opciones y requisitos vistos para considerar","text":""},{"location":"Proyecto_final_git/proyecto_final/#21-snipe-it","title":"2.1 - Snipe-IT","text":"<p>Snipe-IT es una aplicaci\u00f3n web de c\u00f3digo abierto dise\u00f1ada para la gesti\u00f3n de activos de TI (Information Technology, hardware, software,...). Es una soluci\u00f3n popular entre empresas y organizaciones que buscan una herramienta flexible y personalizable para rastrear y administrar sus activos de hardware y software.</p>"},{"location":"Proyecto_final_git/proyecto_final/#211-enfoque","title":"2.1.1 - Enfoque","text":"<ul> <li>Principalmente es una herramienta de gesti\u00f3n de activos de TI (Information Technology).</li> <li>Sobresale en el seguimiento de activos de hardware y software, licencias e informaci\u00f3n relacionada.</li> </ul>"},{"location":"Proyecto_final_git/proyecto_final/#212-fortalezas","title":"2.1.2 - Fortalezas","text":"<ul> <li>Interfaz f\u00e1cil de usar.</li> <li>S\u00f3lidas capacidades de seguimiento de activos.</li> <li>Ideal para organizaciones que necesitan un inventario detallado de hardware y software.</li> <li>Muy bueno en la gesti\u00f3n de licencias, control de equipos y recursos de la organizaci\u00f3n</li> <li>Muy bueno en el rastreo de los activos con c\u00f3digos de barras y c\u00f3digos QR.</li> </ul>"},{"location":"Proyecto_final_git/proyecto_final/#213-limitaciones","title":"2.1.3 - Limitaciones","text":"<ul> <li>Menos robusto en \u00e1reas como la gesti\u00f3n de solicitudes de soporte t\u00e9cnico de los usuarios, en la creaci\u00f3n y seguimiento de incidencias, asignaci\u00f3n a grupos de mantenimiento, gesti\u00f3n de prioridades, etc.., en comparaci\u00f3n con GLPI.</li> </ul>"},{"location":"Proyecto_final_git/proyecto_final/#22-glpi-gestionnaire-libre-de-parc-informatique","title":"2.2 - GLPI ( Gestionnaire Libre de Parc Informatique)","text":"<p>Un software gratuito y open-source para gestionar activos de TI (Information Tchnology, hardware, software,...). GLPI permite administrar inventarios de equipos, seguimiento de problemas y gesti\u00f3n de tareas relacionadas con el mantenimiento y soporte de sistemas inform\u00e1ticos; o sea atender, ayudar, solucionar y rastrear problemas e incidencias (tickets).</p>"},{"location":"Proyecto_final_git/proyecto_final/#221-enfoque","title":"2.2.1 - Enfoque","text":"<ul> <li>Una suite integral de gesti\u00f3n de servicios de TI (Information Technology).</li> <li>Incluye gesti\u00f3n de activos e incidencias y asignaci\u00f3n de prioridades de ayuda.</li> </ul>"},{"location":"Proyecto_final_git/proyecto_final/#222-fortalezas","title":"2.2.2 - Fortalezas","text":"<ul> <li>GLPI es un software libre para la gesti\u00f3n de TI (Information Technology), destacando por su personalizaci\u00f3n, automatizaci\u00f3n de peticiones e incidencias y ampliamente utilizado por empresas para optimizar la gesti\u00f3n de su infraestructura tecnol\u00f3gica.</li> <li>Centraliza activos, inventario y soporte en una sola plataforma.</li> </ul>"},{"location":"Proyecto_final_git/proyecto_final/#223-limitaciones","title":"2.2.3- Limitaciones","text":"<ul> <li>Puede tener una curva de aprendizaje m\u00e1s pronunciada.</li> <li>La interfaz puede considerarse menos moderna que la de Snipe-IT</li> </ul>"},{"location":"Proyecto_final_git/proyecto_final/#3-decision-glpi","title":"3 - Decisi\u00f3n: GLPI","text":""},{"location":"Proyecto_final_git/proyecto_final/#31-motivos","title":"3.1 - Motivos","text":"<p>Es una elecci\u00f3n m\u00e1s s\u00f3lida que Snipe-IT, ya que ofrece un conjunto m\u00e1s completo de herramientas, para gestionar:</p> <ul> <li>Incidencias t\u00e9cnicas (equipos, software, etc.).</li> <li>Problemas recurrentes y cambios en la infraestructura.</li> <li>Escalabilidad: Crece junto con las necesidades del centro.</li> <li>Control detallado: Inventario de equipos y licencias.</li> <li>Comunidad activa: Actualizaciones constantes y soporte.</li> <li>Trayectoria global: Ampliamente usado en Europa y Latinoam\u00e9rica.</li> <li>Multiling\u00fce y flexible: Se adapta a entornos educativos diversos.</li> </ul>"},{"location":"Proyecto_final_git/proyecto_final/#4-escenario-con-aws","title":"4 - Escenario con AWS","text":""},{"location":"Proyecto_final_git/proyecto_final/#41-diagrama-de-arquitectura","title":"4.1 - Diagrama de arquitectura","text":""},{"location":"Proyecto_final_git/proyecto_final/#5-escenario-definitivo-con-proxmox","title":"5 - Escenario definitivo con Proxmox","text":""},{"location":"Proyecto_final_git/proyecto_final/#51-diagrama-de-arquitectura","title":"5.1 Diagrama de arquitectura","text":""},{"location":"Proyecto_final_git/proyecto_final/#6-instalacion-y-configuracion-de-las-herramientas-a-utilizar","title":"6 - Instalaci\u00f3n y configuraci\u00f3n de las herramientas a utilizar","text":""},{"location":"Proyecto_final_git/proyecto_final/#61-aws-con-ubuntu-server-2404","title":"6.1 - AWS con Ubuntu Server 24.04","text":"<p>La instancia de AWS ser\u00e1 la MV en la nube que nos alojar\u00e1 las siguientes herramientas que necesitaremos en nuestro proyecto, manejando toda la l\u00f3gica, el almacenamiento y la generaci\u00f3n de contenido.</p> <p>Ubuntu-server ser\u00e1 el sistema operativo que nos proporcionar\u00e1 la base para ejecutar los servicios.</p> <p> </p>"},{"location":"Proyecto_final_git/proyecto_final/#creacion-de-una-instancia-ec2-en-aws","title":"Creaci\u00f3n de una instancia EC2 en AWS","text":"<ul> <li> <p>Paso 1. Iniciamos el laboratorio.</p> </li> <li> <p>Desde el curso de AWS Academy iniciamos el laboratorio pulsando en Start Lab y esperamos a que el icono que aparece junto al texto de AWS se ponga de color verde.</p> </li> </ul> <p></p> <ul> <li>Paso 2.Accedemos a la consola de Administraci\u00f3n de AWS.</li> <li>Desde la consola seleccionamos el servicio de EC2.</li> </ul> <p></p> <ul> <li>Paso 3. Buscamos el bot\u00f3n \"Launch Instance\" para crear una instancia EC2.</li> </ul> <p></p> <ul> <li>Paso 4. Le asignamos un nombre a la instancia EC2 que vamos a crear.</li> </ul> <p></p> <ul> <li>Paso 5. Seleccionamos la AMI y la arquitectura de la instancia EC2.</li> <li>En este paso tenemos que seleccionar la AMI (Amazon Machine Image) y la arquitectura. Para mi proyecto voy a seleccionar la imagen Ubuntu Server 24.04 LTS (HVM), SSD Volume Type, y la arquitectura 64 bits (x86).</li> </ul> <p></p> <ul> <li>Paso 6. Seleccionamos el tipo de instancia EC2.</li> <li>Seleccionamos que vamos a crear una instancia de tipo t2.micro. que cuenta con 1 vCPU y 1 GiB de RAM.</li> </ul> <p></p> <ul> <li> <p>Paso 7. Seleccionamos la clave p\u00fablica SSH que le vamos a inyectar a la instancia EC2.</p> </li> <li> <p>En este ejemplo vamos a utilizar la clave p\u00fablica vockey que est\u00e1 asociada a nuestra cuenta de usuario en la plataforma AWS Learner Lab. La clave privada la descargaremos m\u00e1s adelante desde la plataforma, para poder conectarnos por SSH con la instancia EC2.</p> </li> </ul> <p></p> <p></p> <ul> <li>Paso 8. Configuramos los grupos de seguridad.</li> <li>En este proyecto vamos a crear un nuevo grupo de seguridad y vamos a utilizar tres reglas para permitir tr\u00e1fico SSH, HTTP y HTTPS.</li> <li>SSH. Protocolo: TCP. Puerto: 22. Origen: 0.0.0.0/0</li> <li>HTTP. Protocolo: TCP. Puerto: 80. Origen: 0.0.0.0/0</li> <li>HTTPS. Protocolo: TCP. Puerto: 443. Origen: 0.0.0.0/0</li> </ul> <p></p> <ul> <li>Paso 9. A\u00f1adimos el almacenamiento que utilizar\u00e1 la instancia.*</li> <li>En este paso configuramos cu\u00e1l ser\u00e1 el almacenamiento que utilizar\u00e1 la instancia EC2 que estamos creando.</li> <li>Para nuestro ejemplo en el proyecto no vamos a modificar ninguno de los par\u00e1metros que aparecen por defecto y utilizaremos un disco SSD de 8 GB.</li> </ul> <p></p> <ul> <li>Paso 10. Revisamos la configuraci\u00f3n seleccionada.</li> <li>Para crear la instancia pinchamos sobre el bot\u00f3n Lanuch Instance.</li> </ul> <p></p> <ul> <li>Paso 11. Estado de la instancia.</li> <li>En este paso nos aparece un mensaje indicando que la instancia se est\u00e1 creando.     Pincharemos sobre el identificador de la instancia que aparece en el cuadro de color verde.</li> </ul> <p></p> <ul> <li>Paso 12. Consultaremos el estado de la instancia desde la consola de administraci\u00f3n.</li> <li>Cuando pasen unos segundos le aparecer\u00e1 en la consola la instancia que acaba de crear.</li> <li>Cuando la instancia muestre que est\u00e1 en estado Running es que est\u00e1 preparada para conectarnos a ella.</li> </ul> <p></p>"},{"location":"Proyecto_final_git/proyecto_final/#nos-conectamos-a-la-instancia-por-ssh-para-ejecutar-los-comandos-de-instalacion-de-las-herramientas-del-proyecto","title":"Nos conectamos a la instancia por SSH para ejecutar los comandos de instalaci\u00f3n de las herramientas del proyecto","text":"<ul> <li>Paso 1. Seleccionamos la instancia y pinchamos sobre \"Conectar\".</li> </ul> <ul> <li>Paso 2. Vamos a obtener el comando para conectarnos desde un cliente SSH en Linux.</li> <li>En este paso nos aparece c\u00f3mo podemos conectarnos a la instancia que acabamos de crear.</li> <li>Seleccionaremos la opci\u00f3n SSH client, y veremos los pasos que tenemos que realizar para conectarnos a la instancia.</li> <li>El comando que tenemos que utilizar para conectarnos a la instancia lo podemos copiar en este paso. En el comando aparece el nombre del archivo .pem de la clave privada (que hemos creado), el nombre del usuario y el nombre DNS p\u00fablico de la instancia.</li> </ul> <ul> <li> <p>En nuestro caso al crear par de claves ya las hemos ubicado en el directorio M\u00fasica, pero se pueden descargar pinchando sobe el texto AWS Details y le aparecer\u00e1 en la parte derecha la posibilidad de descargar la clave como un archivo .pem o .ppk</p> </li> <li> <p>En Linux utilizaremos la clave .pem, cuando descarguemos la clave se descargar\u00e1 como nombre.pem o nombre.ppk.</p> </li> </ul> <p></p> <p></p> <p>Paso 3. Nos conectamos por SSH desde Linux.</p> <ul> <li>Cambiamos los permisos del archivo para que solo el propietario tenga permisos de lectura.</li> </ul> <pre><code>sudo chmod 400 clave_aws.pem\n</code></pre> <ul> <li>Ejecutamos el comando que copiamos en el paso 2 para conectarnos por SSH a la instancia EC2 desde un terminal de Linux.</li> <li>El comando ser\u00e1 parecido al este, pero el nombre DNS de la instancia ser\u00e1 diferente.</li> </ul> <pre><code>sudo ssh -i \"clave_AWS.pem\" ubuntu@ec2-34-239-105-173.compute-1.amazonaws.com\n</code></pre> <p></p>"},{"location":"Proyecto_final_git/proyecto_final/#62-instalacion-definitiva-proxmox-con-ubuntu-server-2404","title":"6.2 - (Instalaci\u00f3n definitiva ) Proxmox con Ubuntu Server 24.04","text":""},{"location":"Proyecto_final_git/proyecto_final/#621-instalacion-de-proxmox","title":"6.2.1 - Instalaci\u00f3n de Proxmox","text":"<ul> <li>Paso 1. Descargar la ISO de Proxmox VE.</li> <li>Desde la web oficial: https://www.proxmox.com/en/downloads</li> <li>Paso 2. Crear un USB booteable.</li> <li>Usaremos herramientas como Rufus (Windows) o balenaEtcher (Linux/macOS).</li> <li>Paso 3. Arrancar desde el USB.</li> <li>Encendemos el servidor o PC y entramos en la BIOS/UEFI para arrancar desde el USB.</li> <li>Paso 4. Iniciamos la instalaci\u00f3n.</li> <li> <p>Selecciona \"Install Proxmox VE\" en el men\u00fa que aparece.</p> <p></p> </li> <li> <p>Paso 5. Aceptar licencia y disco de instalaci\u00f3n.</p> </li> </ul> <p></p> <ul> <li>Paso 6. Configurar regi\u00f3n y teclado .</li> </ul> <p></p> <ul> <li>Paso 7. Crear contrase\u00f1a de root y correo electr\u00f3nico.</li> </ul> <p></p> <ul> <li>Paso 8. Configurar red.</li> </ul> <p></p> <ul> <li>Paso 9. Finalizar instalaci\u00f3n y reiniciar.</li> <li> <p>Cuando terminemos, retiramos el USB y reiniciamos.</p> <p> </p> </li> <li> <p>Paso 10. Accedemos a la interfaz web (despu\u00e9s del reinicio).</p> </li> <li> <p>Abre un navegador y entramos en: <code>https://[IP-del-servidor]:8006</code>.</p> <p></p> </li> </ul>"},{"location":"Proyecto_final_git/proyecto_final/#622-creacion-de-la-mv-ubuntu-server-en-proxmox","title":"6.2.2 - Creaci\u00f3n de la MV Ubuntu Server en Proxmox","text":"<ul> <li>Paso 1. Cargar ISO a Proxmox VE una vez hemos accedido a la interfaz web.</li> </ul> <ul> <li>Paso 2. Esto abrir\u00e1 la ventana emergente de carga. Seleccionaremos Imagen ISO. Desde el men\u00fa desplegable de contenido, seleccionaremos el archivo ISO que deseamos cargar. Haremos clic en el bot\u00f3n Upload para cargar el archivo ISO.</li> </ul> <ul> <li>Paso 3. Crearemos la MV una vez cargado el archivo ISO.</li> </ul> <ul> <li>Paso 4. En la pesta\u00f1a General asignaremos un nombre a la MV.</li> </ul> <ul> <li>Paso 5. En la pesta\u00f1a OS elegimos la imagen ISO que hemos subido.</li> </ul> <ul> <li>Paso 6. En la pesta\u00f1a System dejaremos la configuraci\u00f3n predeterminada.</li> </ul> <ul> <li>Paso 7. En la pesta\u00f1a Disk seleccionaremos el disco de almacenamiento y el tama\u00f1o del disco de la MV.  </li> </ul> <ul> <li>Paso 8. En la pesta\u00f1a CPU seleccionaremos el n\u00famero de n\u00facleos de CPU que deseamos asignar a la MV.</li> </ul> <ul> <li>Paso 9. En la pesta\u00f1a Memory asignaremos la cantidad de RAM para la MV.</li> <li>Como estamos realizando pruebas en VirtualBox con 2 niveles de virtualizaci\u00f3n asignaremos m\u00e1s cores y RAM para que pueda funcionar.</li> </ul> <ul> <li>Paso 10. En la pesta\u00f1a Network dejaremos la configuraci\u00f3n predeterminada.</li> </ul> <ul> <li>Paso 11. En la pesta\u00f1a Confirm revisaremos la configuraci\u00f3n de la MV y finalizaremos.</li> </ul> <ul> <li>Paso 12. Instalaremos el SO en la MV.</li> </ul> <ul> <li>Paso 13. Se abrir\u00e1 una consola virtual que usaremos para instalar el SO que queramos, siguiendo las instrucciones del instalador.</li> </ul>"},{"location":"Proyecto_final_git/proyecto_final/#63-creacion-de-la-pila-lamp-linux-apache-mariadb-y-php","title":"6.3 - Creaci\u00f3n de la pila LAMP (Linux, Apache, MariaDB y PHP)","text":""},{"location":"Proyecto_final_git/proyecto_final/#631-instalacion-de-apache","title":"6.3.1 - Instalaci\u00f3n de Apache","text":"<p>Ser\u00e1 el servidor web que nos gestionar\u00e1 las solicitudes HTTP y nos proporcionar\u00e1 las p\u00e1ginas web.</p> <ul> <li> <p>Paso 1. Instalamos:</p> <pre><code>sudo apt update\nsudo apt install apache2 -y\n</code></pre> </li> <li> <p>Paso 2. Realizamos un backup de nuestro 000-defaults.conf</p> <pre><code>sudo mv /etc/apache2/sites-available/000-default.conf /etc/apache2/sites-available/000-default.conf.bkp\n</code></pre> </li> <li> <p>Paso 3. Creamos un archivo de configuraci\u00f3n (glpi.conf) para el sitio de GLPI en Apache como nos indica la \"Documentaci\u00f3n Oficial de GLPI\".</p> <p>https://glpi-install.readthedocs.io/en/latest/prerequisites.html#web-server</p> </li> </ul> <p>GLPI recomienda no colocarlo en el directorio por default de Apache \"/var/www/html\", sugiere colocarlo por fuera por lo cual lo colocaremos en \"/var/www\".</p> <p><code>sudo nano /etc/apache2/sites-available/glpi.conf</code></p> <pre><code>&lt;VirtualHost *:80&gt;\n    ServerName edu.com\n    DocumentRoot /var/www/glpi/public\n\n    &lt;Directory /var/www/glpi/public&gt;\n        Options -Indexes +FollowSymLinks\n        AllowOverride All\n        Require all granted\n        RewriteEngine On\n        # Redirect all requests to GLPI router, unless file exists.\n        RewriteCond %{REQUEST_FILENAME} !-f\n        RewriteRule ^(.*)$ index.php [QSA,L]\n    &lt;/Directory&gt;\n\n    ErrorLog ${APACHE_LOG_DIR}/glpi-error.log\n    CustomLog ${APACHE_LOG_DIR}/glpi-access.log combined\n\n&lt;/VirtualHost&gt;    \n</code></pre> <ul> <li> <p>Paso 4. Habilitamos el archivo .conf que hemos creado y habilitamos el modulo rewrite.</p> <pre><code>sudo a2ensite glpi.conf\nsudo a2enmod rewrite\n</code></pre> </li> <li> <p>Paso 5. Recargamos, activamos y reiniciamos apache2.service</p> <pre><code>sudo systemctl reload apache2.service\nsudo systemctl enable apache2.service\nsudo systemctl restart apache2.service\n</code></pre> </li> </ul>"},{"location":"Proyecto_final_git/proyecto_final/#632-instalacion-de-php","title":"6.3.2 - Instalaci\u00f3n de PHP","text":"<p>Ser\u00e1 el lenguaje de programaci\u00f3n que ejecutar\u00e1 el c\u00f3digo de GLPI y nos generar\u00e1 las p\u00e1ginas din\u00e1micas.</p> <ul> <li> <p>Paso 1. Instalaremos los repositorios de php y actualizaremos.</p> <pre><code>sudo apt install software-properties-common apt-transport-https -y\nsudo add-apt-repository ppa:ondrej/php -y\nsudo apt update\n</code></pre> </li> <li> <p>Paso 2. Instalamos la versi\u00f3n de php que nos indica la \"Documentaci\u00f3n Oficial de GLPI\", los paquetes necesarios y reiniciamos.</p> <p>https://glpi-install.readthedocs.io/en/latest/prerequisites.html#php</p> <p></p> <pre><code>sudo apt install php8.3 php8.3-cli php8.3-common libapache2-mod-php8.3 -y\nsudo apt install libapache2-mod-fcgid php8.3-fpm -y\nsudo systemctl restart apache2.service\n</code></pre> </li> <li> <p>Paso 3. Activamos variable \"session.cookie_httponly\" a \"on\" en \"/etc/php/8.3/fpm/php.ini\" y reiniciamos.</p> <pre><code>sudo nano /etc/php/8.3/fpm/php.ini\n</code></pre> <p>Buscamos con el editor la variable session.cookie = y la activamos con on.</p> <p>Es una medida de seguridad importante para proteger las sesiones de usuario en aplicaciones web PHP.</p> <p>Ayuda a prevenir el robo de cookies y la suplantaci\u00f3n de identidad. Se recomienda habilitar esta directiva en todos los entornos de producci\u00f3n.</p> <pre><code>sudo systemctl restart php8.3-fpm\n</code></pre> </li> <li> <p>Paso 4. Habilitamos funciones instaladas de php, habilitamos la funci\u00f3n \"fpm\" y recargamos-reiniciamos</p> <pre><code>sudo a2enmod proxy_fcgi setenvif\nsudo a2enconf php8.3 -fpm\nsudo systemctl reload apache2.service\nsudo systemctl restart apache2.service\n</code></pre> </li> </ul> <p>Instalamos la extensiones y dependencias que vamos a necesitar para la posterior instalaci\u00f3n de \"GLPI\".</p> <pre><code>sudo apt install -y php8.3-{curl,gd,imagick,intl,apcu memcache,imap,mysqli,ldap,tidy,xmlrpc,pspell,gettext,mbstring,fpm,iconv,xml,xsl,bz2,Phar,zip,exif}\n</code></pre>"},{"location":"Proyecto_final_git/proyecto_final/#633-instalacion-de-mariadb","title":"6.3.3 - Instalaci\u00f3n de MariaDB","text":"<p>Ser\u00e1 la BBDD que nos almacenar\u00e1 los datos de GLPI.</p> <ul> <li> <p>Paso 1.Instalamos mariadb-server y securizamos.</p> <p>Seguimos los pasos, colocamos una nueva contrase\u00f1a para el usuario root de la BBDD, eliminamos las BBDD de prueba y eliminamos el acceso a usuarios an\u00f3nimos (Enter--n--y--Enter-pass--Re-enter-pass--y--y--y--y).</p> <pre><code>sudo apt install mariadb-server -y\nsudo mysql_secure_installation\n</code></pre> </li> <li> <p>Paso 2. Creamos una BBDD en nuestro caso \"glpi\", un usuario para GLPI en MariaDB, damos privilegios y adem\u00e1s activaremos la zona horaria en mysql.</p> <p>Podemos cambiar los datos que deseemos, nombre de  usuario y BBDD, y colocaremos una contrase\u00f1a apropiada.</p> <pre><code>sudo mysql -u root -p\nCREATE DATABASE glpi; \nCREATE USER '&lt;nomuser&gt;'@'%' IDENTIFIED BY &lt;'passuser'&gt;;\nGRANT ALL PRIVILEGES ON glpi.* TO '&lt;nomuser&gt;'@'%';\nGRANT SELECT ON mysql.time_zone_name TO '&lt;nomuser&gt;'@'%';\nflush privileges;\nexit;\n</code></pre> </li> <li> <p>Paso 3. Cargamos las zonas horarias del sistema (introducimos la contrase\u00f1a de root).</p> <pre><code>sudo mysql_tzinfo_to_sql /usr/share/zoneinfo | sudo mysql -u root -p mysql\n</code></pre> </li> </ul>"},{"location":"Proyecto_final_git/proyecto_final/#64-descarga-e-instalacion-de-glpi","title":"6.4 - Descarga e instalaci\u00f3n de GLPI","text":"<p>Ser\u00e1 la aplicaci\u00f3n que se instalar\u00e1 en el servidor y que nos gestionar\u00e1 los activos de TI (Information Technology) con todos los servicios que nos ofrece.</p> <ul> <li> <p>Paso 1. Procederemos desde su sitio oficial, la \u00faltima versi\u00f3n para la fecha es la \"10.0.18\".</p> <p>https://glpi-project.org/es/descargar-software/</p> <pre><code>wget https://github.com/glpi-project/glpi/releases/download/10.0.18/glpi-10.0.18.tgz\n</code></pre> </li> <li> <p>Paso 2. Descomprimimos el archivo y lo movemos (-C) al directorio \"/var/www\"     Posteriormente eliminaremos el fichero .tgz, que no lo necesitaremos y el index.html para no tener problemas.</p> <pre><code>sudo tar -zxvf glpi-10.0.18.tgz -C /var/www/\nsudo rm -rf glpi-10.0.18.tgz \nsudo rm -rf /var/www/html/index.html\n</code></pre> </li> <li> <p>Paso 3. Le damos al usuario de apache la propiedad de la carpeta y permisos.</p> <pre><code>sudo chown -R www-data:www-data /var/www/glpi\nsudo chmod -R 755 /var/www/glpi\n</code></pre> </li> <li> <p>Paso 4 (opcional). Si queremos cambiar los logotipos de GLPI, tendremos que tener en el $HOME de nuestro servidor el logo-master que cambiar\u00e1 los de la aplicaci\u00f3n.</p> <p>Una vez consultada la p\u00e1gina oficial de las recomendaciones para determinar el tama\u00f1o (pixel) de los logos de cada sitio, procederemos a crearlos.</p> <p>https://glpi-plugins.readthedocs.io/en/latest/branding/index.html</p> <p>Tendremos que tener instalado en el sistema imagemagick para poder crear con el comando converter los ficheros de imagen de los logos con los tama\u00f1os que se nos indica.</p> <p><code>sudo apt install imagemagick -y</code></p> <p>Haremos un backup de los logos originales de la aplicaci\u00f3n.</p> <pre><code>sudo mv /var/www/glpi/pics/favicon.ico /var/www/glpi/pics/favicon.ico.bkp\nsudo mv /var/www/glpi/pics/logos/logo-GLPI-100-white.png /var/www/glpi/pics/logos/logo-GLPI-100-white.png.bkp\nsudo mv /var/www/glpi/pics/logos/logo-GLPI-250-black.png /var/www/glpi/pics/logos/logo-GLPI-250-black.png.bkp\n</code></pre> <p>Crearemos los ficheros de imagen de los logos con los tama\u00f1os requeridos (pixeles) que vamos a necesitar.</p> <pre><code>sudo convert $HOME/&lt;logo-master&gt; -resize 32x32\\! favicon.ico\nsudo convert $HOME/&lt;logo-master&gt; -resize 100x55\\! logo-GLPI-100-white.png\nsudo convert $HOME/&lt;logo-master&gt; -resize 220x130\\! logo-GLPI-250-black.png\n</code></pre> <p>Cambiamos los permisos de los ficheros creados a 755.</p> <pre><code>sudo chmod 755 favicon.ico\nsudo chmod 755 logo-GLPI-100-white.png\nsudo chmod 755 logo-GLPI-250-black.png\n</code></pre> <p>Copiamos los ficheros de imagen creados de los logos a sus respectivas rutas.</p> <pre><code>sudo cp favicon.ico /var/www/glpi/pics/\nsudo cp logo-GLPI-100-white.png /var/www/glpi/pics/logos/\nsudo cp logo-GLPI-250-black.png /var/www/glpi/pics/logos/\n</code></pre> <p>Cambiamos el propietario y el grupo de todos los ficheros a www-data.</p> <pre><code>sudo chown www-data:www-data /var/www/glpi/pics/favicon.ico\nsudo chown www-data:www-data /var/www/glpi/pics/favicon.ico.bkp\nsudo chown www-data:www-data /var/www/glpi/pics/logos/logo-GLPI-100-white.png\nsudo chown www-data:www-data /var/www/glpi/pics/logos/logo-GLPI-100-white.png.bkp\nsudo chown www-data:www-data /var/www/glpi/pics/logos/logo-GLPI-250-black.png\nsudo chown www-data:www-data /var/www/glpi/pics/logos/logo-GLPI-250-black.png.bkp\n</code></pre> </li> </ul> <p>Hay que tener en cuenta que para que se aplique en su momento el cambio de los \"logos\" tendremos que \"ELIMINAR-BORRAR LOS DATOS DEL NAVEGADOR\".</p> <p>En este momento ya tenemos instalados todos los componentes para ejecutar GLPI abriendo un navegador contra nuestro GLPI, &lt;http://IP de nuestro servidor.</p>"},{"location":"Proyecto_final_git/proyecto_final/#65-asistente-de-configuracion-de-glpi","title":"6.5 - Asistente de configuraci\u00f3n de GLPI","text":"<ul> <li> <p>Paso 1. Si todo ha ido bien tendremos el asistente de configuraci\u00f3n de GLPI, despu\u00e9s de abrir ya un navegador contra nuestro GLPI, algo como http://DIRECCION_IP del servidor, lo primero, escogeremos el idioma a utilizar &amp; OK.</p> </li> <li> <p>Paso 2. Leemos y aceptamos los t\u00e9rminos de la licencia de GLPI &amp; Continuar.</p> <p> </p> </li> <li> <p>Paso 3. Pulsamos en Instalar ya que estamos instal\u00e1ndolo por primera vez.</p> <p></p> </li> <li> <p>Paso 4. Verificamos que cumplimos todos los requisitos y est\u00e1n todos correctos.</p> <p> </p> </li> <li> <p>Paso 5. Indicamos los datos del servidor de BBDD, indicamos localhost o 127.0.0.1 e indicamos el usuario y contrase\u00f1a de acceso a la BBDD &amp; Continuar.</p> </li> <li> <p>Paso 6. Seleccionamos la BBDD que creamos anteriormente, llamada glpi &amp; Continuar.</p> <p> </p> </li> <li> <p>Paso 7. Si conect\u00f3 e inicializ\u00f3 la BBDD, pulsamos en Continuar.</p> </li> <li> <p>Paso 8. Podemos voluntariamente si queremos enviar las m\u00e9tricas de uso para que la comunidad de GLPI pueda mejorar el producto, en mi caso como son pruebas desactivar\u00e9 &amp; Continuar.</p> <p> </p> <p> </p> </li> </ul> <p>Nos indica que existen unas cuentas de usuario ya predefinidas con distintos roles, desactivaremos en un futuro las cuentas y cambiaremos su contrase\u00f1a. Estas cuentas ser\u00edan:</p> <ul> <li> <p>Administrador: glpi-glpi</p> </li> <li> <p>T\u00e9cnico: tech-tech</p> </li> <li> <p>Cuenta s\u00f3lo lectura: post-only-postonly</p> </li> <li> <p>Cuenta normal: normal-normal</p> </li> </ul> <p>Inicialmente Acceso y Contrase\u00f1a ser\u00e1n glpi</p> <p> </p> <p>Eliminaremos el fichero /var/www/glpi/install/install.php</p>"},{"location":"Proyecto_final_git/proyecto_final/#66-documentacion-funcional-de-glpi","title":"6.6 - Documentaci\u00f3n funcional de GLPI","text":""},{"location":"Proyecto_final_git/proyecto_final/#661-crear-usuarios","title":"6.6.1 - Crear usuarios","text":"<p>Un usuario es una persona que va a usar GLPI. Puede ser:</p> <ul> <li> <p>Un t\u00e9cnico de soporte.</p> </li> <li> <p>Un administrativo que genera tickets.</p> </li> <li> <p>Un responsable que autoriza compras.</p> </li> <li> <p>O simplemente alguien que reporta incidencias.</p> </li> </ul> <p>Opcional pero recomendable:</p> <ul> <li> <p>Darle un perfil (rol):</p> </li> <li> <p>Por ejemplo: \"Self-Service\", \"T\u00e9cnico\", \"Administrador\".</p> <p></p> <p></p> </li> </ul>"},{"location":"Proyecto_final_git/proyecto_final/#662-crear-grupos","title":"6.6.2 - Crear grupos","text":"<p>Crear grupos es una manera muy \u00fatil de organizar usuarios, asignar permisos m\u00e1s f\u00e1cilmente, o estructurar equipos seg\u00fan proyectos, departamentos, etc.</p> <ul> <li>Accedemos a GLPI</li> <li> <p>Iniciamos sesi\u00f3n con un usuario que tenga permisos de administrador.</p> </li> <li> <p>Vamos al men\u00fa de \"Administraci\u00f3n\"</p> </li> <li> <p>En el men\u00fa de la izquierda, hacemos clic en:</p> <ul> <li>Administraci\u00f3n &gt; Grupos</li> </ul> </li> <li> <p>Hacemos clic en el bot\u00f3n \"A\u00f1adir\" (o el s\u00edmbolo de +).</p> </li> <li> <p>Se abrir\u00e1 un formulario para crear el grupo.</p> </li> <li> <p>Rellenaremos los datos del grupo.</p> </li> <li> <p>Una vez rellenado todo, haremos clic en \"A\u00f1adir\" o \"Guardar\".</p> </li> </ul> <p></p> <ul> <li> <p>Asignamos usuarios al grupo.</p> </li> <li> <p>Despu\u00e9s de crearlo, dentro del grupo puedes ir a la pesta\u00f1a Usuarios y pulsamos \"A\u00f1adir\".</p> </li> <li> <p>Elegiremos los usuarios que queremos agregar a ese grupo.</p> </li> </ul> <p></p>"},{"location":"Proyecto_final_git/proyecto_final/#663-gestion-de-perfiles","title":"6.6.3 - Gesti\u00f3n de perfiles","text":"<p>Un perfil define lo que el usuario puede hacer y ver. Es como un \u201crol\u201d o \u201cpermiso\u201d.</p> <p>Algunos ejemplos que vienen por defecto:</p> <ul> <li>Self-Service: Solo reporta tickets y ve los suyos.</li> <li>Technician: Ve y gestiona tickets asignados.</li> <li>Supervisor: Ve todos los tickets de su grupo.</li> <li>Admin: Tiene acceso completo.</li> <li>Read-Only: Solo puede ver, no tocar nada.</li> </ul> <p>Podemos crear perfiles personalizados, por ejemplo:</p> <ul> <li>Un perfil que solo puede ver inventario.</li> <li>Otro que solo puede aprobar compras, etc...</li> </ul> <p></p> <ul> <li>Le asignamos dentro de cada apartado los permisos que deseamos para cada perfil o como hemos dicho anteriormente creamos un perfil con permisos personalizados.</li> </ul> <p></p>"},{"location":"Proyecto_final_git/proyecto_final/#664-gestion-de-gmail-como-nuestro-servidor-de-correo","title":"6.6.4 - Gesti\u00f3n de GMail como nuestro servidor de correo","text":"<p>Google ha endurecido el proceso para enviar emails desde aplicaciones externas. Por este motivo recomendable tenemos que crear una contrase\u00f1a de aplicaci\u00f3n exclusiva para GLPI. No sustituye nuestra contrase\u00f1a de GMail, se trata de una nueva que solamente sirve para enviar emails desde GLPI.</p>"},{"location":"Proyecto_final_git/proyecto_final/#6641-configurar-la-cuenta-de-gmail-para-que-funcione-con-glpi","title":"6.6.4.1 - Configurar la cuenta de GMail para que funcione con GLPI","text":"<ul> <li> <p>Antes de nada, necesitamos una cuenta de GMail que ser\u00e1 usada para enviar los correos:</p> </li> <li> <p>Crearemos una cuenta GMail (si no tenemos una dedicada para GLPI, es recomendable que creemos una exclusiva).</p> </li> <li> <p>Entrar a GMail y configuraremos lo siguiente:</p> </li> <li> <p>Abrimos GMail y hacemos clic en nuestra cuenta, arriba derecha. Despu\u00e9s clic en Gestionar tu cuenta de Google.</p> <p></p> </li> <li> <p>Ahora clic en la secci\u00f3n Seguridad en la parte izquierda de la p\u00e1gina.</p> <p></p> </li> <li> <p>En la parte media de la P\u00e1gina, en la secci\u00f3n \"Como inicias sesi\u00f3n en Google\", Verificaci\u00f3n en dos pasos (si no la tenemos ya), comprobaremos que lo tenemos activado para as\u00ed poder crear la contrase\u00f1a de aplicaci\u00f3n para GLPI.</p> <p></p> </li> <li> <p>En la barra superior de b\u00fasqueda teclearemos Contrase\u00f1as de aplicaci\u00f3n.</p> <p></p> </li> <li> <p>Introducimos el nombre de la aplicaci\u00f3n que en nuestro caso ser\u00e1 GLPI y    pulsamos en Crear.</p> <p></p> <p></p> </li> <li> <p>Ahora ya hemos creado una nueva contrase\u00f1a de aplicaci\u00f3n exclusiva para enviar emails desde GLPI. Solamente para eso, no sustituye a tu contrase\u00f1a de GMail.</p> </li> <li>Quitaremos los espacios generados entre los tramos de la contrase\u00f1a y la guardaremos en un block de notas para posteriormente utilizarla en la configuraci\u00f3n del email de GLPI.</li> </ul>"},{"location":"Proyecto_final_git/proyecto_final/#6642-configurar-la-salida-de-correo-smtp-en-glpi","title":"6.6.4.2 - Configurar la salida de correo (SMTP) en GLPI","text":"<p>Ahora vamos a decirle a GLPI c\u00f3mo usar esa cuenta de GMail para enviar correos.</p> <ul> <li>Entraremos en GLPI como \"Super-Admin\".</li> <li> <p>Iremos a Configuraci\u00f3n &gt; Notificaciones &gt; Configuraci\u00f3n de los seguimientos por correo.</p> </li> <li> <p>Rellenamos los datos y guardamos:</p> </li> </ul> <p></p> <p></p>"},{"location":"Proyecto_final_git/proyecto_final/#6643-configurar-las-notificaciones-para-que-avisen-al-grupo","title":"6.6.4.3 - Configurar las notificaciones para que avisen al grupo","text":"<p>Ahora vamos a configurar que cuando llegue una incidencia, se avise al grupo.</p> <ul> <li> <p>Iremos a Configuraci\u00f3n &gt; Notificaciones &gt; Notificaciones.</p> </li> <li> <p>Buscaremos la notificaci\u00f3n llamada \"Nueva petici\u00f3n\" (o \"New Ticket\").</p> </li> </ul> <p></p> <ul> <li>Editamos esa notificaci\u00f3n y guardamos.</li> </ul> <p></p> <ul> <li>En Destinatarios (Recipients) nos aseguramos de que seleccionamos el grupo que nos interesa y actualizamos-guardamos.</li> </ul> <p></p>"},{"location":"Proyecto_final_git/proyecto_final/#6644-automatizar-las-notificaciones","title":"6.6.4.4. - Automatizar las notificaciones","text":"<ul> <li> <p>Iremos a Configuraci\u00f3n &gt; Acciones autom\u00e1ticas.</p> </li> <li> <p>Paso 1. Buscaremos la acci\u00f3n mailgate.</p> </li> <li> <p>La editamos y la desactivamos para que no nos recupere cada vez que se genere una notificaci\u00f3n todas los correos almacenados y creados anteriormente (Guardar).</p> <p></p> </li> <li> <p>Paso 2. Buscaremos las acciones queuednotification (Correos enviados a cola) y queuednotificationclean (Limpiar cola de notificaciones).</p> </li> <li> <p>Cada acci\u00f3n debe tener:</p> <ul> <li>Modo de ejecuci\u00f3n: CLI</li> <li>Estado: Programada</li> <li>Frecuencia: el intervalo que desees (por ejemplo, cada 5 minutos, cada hora, etc.), aunque el cron que programaremos en el sistema marcar\u00e1 los intervalos reales de tiempo a ejecutar.</li> </ul> <p></p> <p></p> </li> <li> <p>Paso 3. Usaremos CRON agregando una entrada en el crontab del sistema.</p> </li> </ul> <pre><code>sudo crontab -e\n</code></pre> <ul> <li>A\u00f1adiremos esto para que se ejecute cada 2 minutos:</li> </ul> <pre><code>  */2 * * * * /usr/bin/php8.3 /var/www/glpi/front/cron.php &amp;&gt;/dev/null\n</code></pre> <p>El front/cron.php, viene incluido con GLPI, es un script PHP oficial que GLPI trae para gestionar las acciones autom\u00e1ticas.</p>"},{"location":"Proyecto_final_git/proyecto_final/#665-generacion-de-codigos-qr","title":"6.6.5 - Generaci\u00f3n de c\u00f3digos QR","text":"<p>Los c\u00f3digos QR se generan para almacenar y compartir informaci\u00f3n de manera r\u00e1pida y accesible.</p> <p>Su uso es muy amplio y en nuestro proyecto incluir\u00e1:</p> <ul> <li> <p>Enlace al sitio web: Nos facilitar\u00e1 el acceso a las p\u00e1ginas espec\u00edficas sin necesidad de escribir la URL.</p> </li> <li> <p>Informaci\u00f3n de los equipos: Nos proporcionar\u00e1 detalles adicionales de cada equipo.</p> </li> <li> <p>Fichero de Imagen.png: Para guardar en la ficha del equipo inventariado y para adjuntar a fichero de texto para su posterior impresion y etiquetado de este.</p> </li> </ul> <p>En nuestro proyecto a\u00f1adiremos una extensi\u00f3n a nuestro navegador Google-Chrome desde la Web Store de \u00e9ste, en nuestro caso ser\u00e1:</p> <p> </p> <ul> <li> <p>Caracter\u00edsticas principales:</p> </li> <li> <p>Genera c\u00f3digos QR a partir de texto libre y URLs al instante.</p> </li> <li>Genera un c\u00f3digo QR para tu p\u00e1gina actual con un solo clic.</li> <li>Personalizaci\u00f3n de color y tama\u00f1o.</li> <li>Opci\u00f3n para descargar el c\u00f3digo QR como una imagen (PNG/SVG/C\u00f3digo SVG).</li> </ul> <p>Una vez posicionados en el registro de nuestro dispositivo-equipo, haremos un click en la barra superior del navegador en el icono de nuestra extension.</p> <ul> <li>Se nos abrir\u00e1 la imagen de un c\u00f3digo QR para poderlo descargar y guardar.</li> </ul> <p></p> <ul> <li>A continuaci\u00f3n se nos abrir\u00e1 un destino dentro de nuestros directorios para poder elegir una ubicaci\u00f3n o una estructura que para tal motivo tengamos creada y guard\u00e1ndolo para despu\u00e9s imprimirlo.</li> </ul>"},{"location":"Proyecto_final_git/proyecto_final/#666-crear-peticiones-incidencias","title":"6.6.6 - Crear peticiones (incidencias)","text":"<p>Desde la ficha del usuario nos seleccionamos Peticiones creadas &gt;&gt; \"Nueva petici\u00f3n para este elemento\".</p> <p></p> <p></p> <p>Aqu\u00ed ya detallaremos el tipo, categor\u00eda, estado, urgencia, etc..., que una vez a\u00f1adida se nos plasmar\u00e1 en el panel central.</p> <p></p>"},{"location":"Proyecto_final_git/proyecto_final/#67-instalacion-automatizada-de-los-puntos-63-y-64","title":"6.7 - Instalaci\u00f3n automatizada de los puntos 6.3 y 6.4","text":"<p>Para una instalaci\u00f3n m\u00e1s r\u00e1pida y optimizada de todo el proceso realizado en los puntos 6.3 y 6.4 y para configurar autom\u00e1ticamente algunas funcionalidades clave, podemos utilizar un script:</p> <p>Puedes ver el script aqu\u00ed</p> <p>Descargar el archivo</p>"},{"location":"Proyecto_final_git/proyecto_final/#68-descarga-e-instalacion-de-visual-studio-code","title":"6.8 - Descarga e instalaci\u00f3n de Visual Studio Code","text":"<p>Editor de c\u00f3digo fuente desarrollado por Microsoft, ligero, r\u00e1pido y muy personalizable que utilizaremos para ajustar el documento del proyecto, nos ayudar\u00e1 a organizar nuestro contenido documentado, nos dar\u00e1 ideas de como unirlo y nos avisar\u00e1 si algo no encaja bien.</p> <ul> <li> <p>Paso 1. Desde la web oficial descargaremos el paquete que corresponda con nuestro SO.</p> <p>https://code.visualstudio.com/download</p> </li> <li> <p>Paso 2. Ejecutaremos el instalador \"desde el directorio en el cual lo hemos descargado\" y seguiremos las instrucciones de \u00e9ste, lo cual veremos detalladamente en un apartado aparte para este cometido.</p> </li> </ul>"},{"location":"Proyecto_final_git/proyecto_final/#69-instalacion-de-las-extensiones-en-vscode-para-markdown","title":"6.9 - Instalaci\u00f3n de las extensiones en VScode para Markdown","text":"<p>Markdown es un lenguaje de marcado ligero que nos permite dar formato a texto plano de manera sencilla, donde los cambios de formato se ven inmediatamente, Markdown utiliza una sintaxis simple para indicar c\u00f3mo debe formatearse el texto sin usar botones ni men\u00fas. Ser\u00e1 el lenguaje que utilizaremos para describir el proyecto que nos proporcionar\u00e1 una forma f\u00e1cil y r\u00e1pida de escribir texto con formato (como t\u00edtulos, negritas, listas o enlaces) usando solo el teclado, sin men\u00fas ni botones.</p> <ul> <li>Paso 1. Buscaremos e instalaremos las  extensiones desde la barra lateral izquierda, haciendo clic en el icono de Extensiones.</li> </ul> <p></p> <ul> <li> <p>Paso 2. Instalaremos las extensiones esenciales para trabajar con markdown.</p> </li> <li> <p>Markdown All in One:</p> </li> <li> <p>Ofrece funciones como vista previa, atajos de teclado, autocompletado, lista de contenidos, y mucho m\u00e1s.</p> </li> <li> <p>Muy \u00fatil para quienes trabajan extensamente con documentos Markdown.</p> </li> </ul> <p></p> <ul> <li> <p>Markdown Preview Enhanced:</p> </li> <li> <p>Esta extensi\u00f3n ampl\u00eda la vista previa est\u00e1ndar de Markdown de VS Code.</p> </li> <li> <p>Permite previsualizar diagramas, f\u00f3rmulas matem\u00e1ticas, archivos PDF, y otros elementos avanzados.</p> </li> <li> <p>Es ideal para documentos Markdown complejos.</p> </li> </ul> <p></p>"},{"location":"Proyecto_final_git/proyecto_final/#610-instalacion-de-tex-live","title":"6.10 - Instalaci\u00f3n de Tex Live","text":"<p>Es una distribuci\u00f3n de software que incluye todo lo necesario para trabajar con documentos en TeX y LaTeX. Ser\u00e1 el compilador para generar nuestro documento PDF del proyecto.</p> <p>Instalaremos la distribuci\u00f3n de la versi\u00f3n completa que contiene todas las herramientas, ya que necesitamos lualatex como motor de procesamiento.</p> <pre><code>sudo apt update\nsudo apt install texlive-full\n</code></pre>"},{"location":"Proyecto_final_git/proyecto_final/#611-instalacion-de-pandoc","title":"6.11 - Instalaci\u00f3n de Pandoc","text":"<p>Es una herramienta de software libre y de c\u00f3digo abierto que se utiliza para convertir documentos de un formato a otro. Se le conoce como el \"convertidor universal de documentos\" debido a su amplia capacidad para manejar una gran variedad de formatos de entrada y salida y por tanto ser\u00e1 el conversor que utilizar\u00e9 para trasformar el documento del proyecto de Markdown a PDF.</p> <p><code>sudo apt install pandoc -y</code></p>"},{"location":"Proyecto_final_git/proyecto_final/#612-instalacion-de-la-plantilla-eisvogel","title":"6.12 - Instalaci\u00f3n de la plantilla Eisvogel","text":"<p>Herramienta que mejora la presentaci\u00f3n de documentos convertidos desde markdown a pdf, por tanto ser\u00e1 la plantilla que nos facilitar\u00e1 la mejora de calidad en la creaci\u00f3n del documento final de nuestro proyecto.</p> <ul> <li> <p>Paso 1. Descargaremos la \u00faltima versi\u00f3n de la plantilla desde web \"SOURCEFORGE\".</p> <p>https://sourceforge.net/projects/eisvogel.mirror/</p> <pre><code>wget https://sourceforge.net/projects/eisvogel.mirror/files/latest/download\n</code></pre> </li> <li> <p>Paso 2. Descomprimimos la carpeta.</p> <p>Posteriormente eliminaremos el fichero .zip, que no lo necesitaremos.</p> <pre><code>sudo unzip Eisvogel-&lt;version&gt;.zip\nsudo rm -rf Eisvogel-&lt;version&gt;.zip\n</code></pre> </li> <li> <p>Paso 3. Copiamos el fichero \"eisvogel.latex\" dentro del directorio donde se encuentre nuestro documento .md.</p> <pre><code>sudo cp Eisvogel-&lt;version&gt;/eisvogel.latex /ruta al directorio del fichero .md\n</code></pre> </li> <li> <p>Paso 4. El comando para convertir-compilar el archivo.md  en un archivo.pdf bonito usando Pandoc y LaTex.</p> <pre><code>pandoc archivo.md -o archivo.pdf \\\n  --from markdown \\\n  --template eisvogel.latex \\\n  --pdf-engine=lualatex \\\n  --listings \\\n  --toc \\\n  --toc-depth=5\n</code></pre> </li> <li> <p>from markdown: el archivo est\u00e1 en formato Markdown.</p> </li> <li> <p>template eisvogel.latex: usa la plantilla llamada eisvogel para que quede bonito.</p> </li> <li>pdf-engine=lualatex: usa el motor LaTeX llamado lualatex para generar el PDF.</li> <li>listings: mejora c\u00f3mo se ve el c\u00f3digo (usa el paquete listings de LaTeX).</li> <li>toc: a\u00f1ade una tabla de contenido (\u00edndice).</li> <li>toc-depth=5: el \u00edndice puede mostrar hasta 5 niveles de t\u00edtulos.</li> </ul>"},{"location":"Proyecto_final_git/proyecto_final/#613-proceso-automatizado-de-conversion-de-markdown-a-pfd","title":"6.13 - Proceso automatizado de conversi\u00f3n de markdown a PFD","text":"<p>Para configurar autom\u00e1ticamente el proceso de conversi\u00f3n de .md a PDF de una manera m\u00e1s r\u00e1pida, podemos utilizar el script:</p> <p>Puedes ver el script aqu\u00ed</p> <p>Descargar el archivo</p>"},{"location":"Proyecto_final_git/proyecto_final/#614-instalacion-de-mkdocs","title":"6.14 - Instalaci\u00f3n de MkDocs","text":"<p>Es un generador r\u00e1pido de p\u00e1ginas web est\u00e1ticas orientado a la creaci\u00f3n de documentaci\u00f3n de proyectos. Ser\u00e1 nuestro sitio HTML en donde se alojar\u00e1 nuestra documentaci\u00f3n del proyecto. Combina simplicidad con flexibilidad, permiti\u00e9ndonos personalizar el dise\u00f1o con temas y complementos.</p> <ul> <li> <p>Paso 1. Instalamos Python.</p> <p>MkDocs est\u00e1 hecho en Python, as\u00ed es que lo necesitamos.</p> <pre><code>sudo apt update\nsudo apt install python3 python3-pip\n</code></pre> </li> <li> <p>Paso 2. Instalamos MkDocs con pip.</p> <p><code>sudo pip3 install mkdocs</code></p> </li> <li> <p>Paso 3. Instalar \"material\".</p> <p><code>sudo pip3 install mkdocs-material</code></p> </li> <li> <p>Paso 4. Creamos un proyecto en Mkdocs.</p> <pre><code>mkdocs new mi-documentacion\ncd mi-documentacion\n</code></pre> </li> <li> <p>Esto nos crea una estructura como esta:</p> <p></p> </li> <li> <p>Paso 5. A\u00f1adimos el contenido de .md propio, ejemplo: (docs/Proyecto.md).</p> <pre><code># Proyecto\n  - Paso 1\n  - Paso 2\n</code></pre> </li> <li> <p>Paso 6. Luego en nuestro \"mkdocs.yml\" a\u00f1adiremos.</p> <pre><code>site-name: Mi documentaci\u00f3n  \ntheme:  \n  name: material  \nnav:  \n  - Inicio: index.md  \n  - Tutorial: Proyecto.md   \n</code></pre> </li> <li> <p>Paso 7 . Si queremos ver el sitio localmente.</p> <pre><code>mkdocs serve\n</code></pre> </li> </ul> <p>Abriremos nuestro navegador en http://127.0.0.1:8000</p> <ul> <li> <p>Paso 8. Publicar con GitHub Pages (despu\u00e9s de haberlo subido a GitHub)</p> <pre><code>mkdocs gh-deploy\n</code></pre> </li> </ul> <p>Esto nos generar\u00e1 una carpeta site/ la cual sube al repositorio en una rama especial llamada gh-pages</p> <p></p>"},{"location":"Proyecto_final_git/proyecto_final/#614-instalacion-de-git","title":"6.14 - Instalaci\u00f3n de Git","text":"<p>Es una plataforma en l\u00ednea dise\u00f1ada para el desarrollo y la colaboraci\u00f3n de software. Es el lugar donde desarrolladores y equipos pueden almacenar, compartir y trabajar juntos en proyectos. En nuestro caso ser\u00e1 la plataforma que alojar\u00e1 nuestro documento del proyecto, para una posterior visualizaci\u00f3n.</p> <ul> <li> <p>Paso 1. Instalamos Git.</p> <pre><code>sudo apt update\nsudo apt install git\n</code></pre> </li> <li> <p>Paso 2. Configuraremos Git por primera vez (nuestro nombre y correo).</p> <pre><code>git config --global user.name \"Edu Yo\"\ngit config --global user.email \"edu@edu.com\"\n</code></pre> </li> <li> <p>Paso 3. Crearemos una cuenta de GitHub (si no la tenemos).</p> </li> <li> <p>Vamos a : https://github.com/ y creamos una cuenta.</p> <p></p> </li> <li> <p>Paso 4. Creamos un repositorio en GitHub desde la web.</p> <p></p> </li> <li> <p>Paso 5. Generamos un nuevo token.</p> <p></p> </li> <li> <p>Paso 6. Clonamos el repositorio desde el terminal.</p> <p></p> <p><code>git clone https://github.com/eduherjul/proyecto-GLPI.git</code></p> <p></p> </li> </ul> <p>Cada vez que subamos cambios, nos pedir\u00e1 usuario y contrase\u00f1a (o token si usamos 2FA).</p>"},{"location":"Proyecto_final_git/proyecto_final/#7-impresion-de-codigos-qr","title":"7 - Impresi\u00f3n de c\u00f3digos QR","text":"<p>LibreOffice Writer es el componente que utilizaremos para crear una tabla de 5x5 que nos permitir\u00e1 ubicar 25 c\u00f3digos QR generados con nuestra extensi\u00f3n de Google para poder etiquetar e identificar nuestro inventario.</p> <p>Almacenados en nuestros directorios, iremos seleccionando uno a uno y arrastr\u00e1ndolos a una hoja de texto .odt o .docx para ponerlos en una tabla para su impresi\u00f3n (PDF) en tama\u00f1o A4.</p> <p>Incluiremos en la parte inferior del c\u00f3digo QR el nombre del dispositivo.</p> <p></p> <p>Adem\u00e1s de guardarlos en un directorio creado a tal efecto guardaremos tambi\u00e9n cada c\u00f3digo QR generado para cada dispositivo en la pesta\u00f1a \"documentos\" dentro de cada uno, para as\u00ed tenerlo almacenado en la BBDD.</p>"},{"location":"Proyecto_final_git/proyecto_final/#8-migracion-de-la-aplicacion-glpi-desde-aws-a-proxmox","title":"8 - Migraci\u00f3n de la aplicaci\u00f3n GLPI desde AWS a Proxmox","text":""},{"location":"Proyecto_final_git/proyecto_final/#81-detalle-del-proceso","title":"8.1 - Detalle del proceso","text":"<p>Paso 1 - Hacer backup y comprimir la BBDD de GLPI (MariaDB) al $HOME.</p> <pre><code>mysqldump -u root -p glpi &gt; $HOME/glpi_backup.sql\ngzip $HOME/glpi_backup.sql\n</code></pre> <p>Paso 2 - Comprimir los archivos de GLPI.</p> <pre><code>sudo tar -czvf $HOME/glpi_files.tar.gz /var/www/glpi\n</code></pre> <p>Paso 3 - Copiar los archivos desde el $HOME de AWS al directorio (Ejem:$HOME) donde se encuentra la clave_AWS.pem del HOST.</p> <p>Esta operaci\u00f3n la haremos desde el HOST.</p> <pre><code>scp -i $HOME/clave_WS.pem ubuntu@ec2-3-86-189-107.compute-1.amazonaws.com:/home/ubuntu/glpi_backup.sql.gz ./\nscp -i $HOME/clave_AWS.pem ubuntu@ec2-3-86-189-107.compute-1.amazonaws.com:/$HOME/glpi_files.tar.gz ./\n</code></pre> <p>Paso 4 - Ejecutamos todo el contenido e instalaci\u00f3n de los puntos 6.2 y 6.3 que detallamos anteriormente.</p> <ul> <li>Creando una instalaci\u00f3n de Proxmox y un Ubuntu Server con una pila LAMP sin GLPI dentro de \u00e9ste.</li> </ul> <p>Paso 5 - Copiamos los archivos desde el $HOME del HOST al $HOME de Ubuntu Server.</p> <pre><code>sudo scp glpi_backup.sql glpi_files.tar.gz $USER@IP_ubuntu_SRV:./\n</code></pre> <p>Tendremos en cuenta al crear el usuario para la BBDD que sea el mismo usuario que el de la BBDD que exportamos.</p> <p>Paso 6 - Descomprimimos y restauramos la BBDD</p> <pre><code>gunzip -f \"$HOME\"/glpi_backup.sql.gz\nmysql -u &lt;user&gt; -p&lt;passwd&gt; glpi &lt; \"$HOME\"/glpi_backup.sql\n</code></pre> <p>Paso 7 - Descomprimimos los archivos de GLPI.</p> <p>Como el archivo descomprimido ya incluye la estructura /var/www/, usamos, --strip-components=2 que elimina los 2 primeros niveles de directorio (var/ y www/) al descomprimir.</p> <pre><code>sudo tar --strip-components=2 -xzvf \"$HOME\"/glpi_files.tar.gz -C /var/www/\nsudo rm -rf \"$HOME\"/glpi_files.tar.gz\nsudo rm -rf /var/www/html/index.html\n</code></pre> <p>Paso 8 -  Damos los permisos correspondientes.</p> <pre><code>sudo chown -R www-data:www-data /var/www/glpi\nsudo chmod -R 755 /var/www/glpi\n</code></pre>"},{"location":"Proyecto_final_git/proyecto_final/#82-proceso-automatizado-del-punto-63","title":"8.2 - Proceso automatizado del punto 6.3","text":"<p>Para configurar autom\u00e1ticamente el punto 6.3 de una manera m\u00e1s r\u00e1pida, podemos utilizar el script:</p> <p>Puedes ver el script aqu\u00ed</p> <p>Descargar el archivo</p>"},{"location":"Proyecto_final_git/proyecto_final/#abrimos-el-navegador-con-la-ip-del-servidor-para-acceder-a-la-interfaz-de-glpi","title":"Abrimos el navegador con la \"IP del Servidor\" para acceder a la interfaz de GLPI","text":""},{"location":"Proyecto_final_git/proyecto_final/#9-script-backup-en-local","title":"9 - Script backup en local","text":"<p>Provisionalmente haremos los backups en local, aunque en un futuro dejaremos preparado el script para que haga los backups en local y remoto.</p> <ul> <li> <p>Definimos las variables que vamos a necesitar.</p> <pre><code>usuariodb=\"edu\"\npassdb=\"123\"\nbackupDir=\"/home/yo/glpi_backups\"\nfecha=$(date +'%Y-%m-%d_%H-%M-%S')\n</code></pre> </li> <li> <p>Creamos la carpeta de backup si no existe (-p evita errores si ya est\u00e1 creada.)</p> <pre><code>mkdir -p \"$backupDir\"\n</code></pre> </li> <li> <p>Hacemos un backup de la BBDD.</p> <pre><code>DB_BACKUP=\"$backupDir/glpi_db_$fecha.sql\"\nmysqldump --user=\"$usuariodb\" --password=\"$passdb\" glpi &gt; \"$DB_BACKUP\"\ngzip \"$DB_BACKUP\"\nDB_BACKUP=\"$DB_BACKUP.gz\"  # Actualizamos nombre tras comprimir\n</code></pre> </li> <li> <p>Hacemos un backup de los archivos de GLPI.</p> <pre><code>GLPI_BACKUP=\"$backupDir/glpi_files_$fecha.tar.gz\"\nsudo tar -czvf \"$GLPI_BACKUP\" /var/www/glpi\n</code></pre> </li> <li> <p>Eliminamos backups antiguos (m\u00e1s de 15 d\u00edas).</p> <pre><code>find \"$backupDir\" -type f -mtime +15 -delete\n</code></pre> </li> <li> <p>Damos permisos de ejecuci\u00f3n al script.</p> <pre><code>sudo chmod +x glpi_backupdual.sh\n</code></pre> </li> <li> <p>Usamos en el script \"logger\" para enviar un mensaje al syslog confirmando la correcta ejecuci\u00f3n.</p> <pre><code>echo \"Mensaje\" | logger -t \"mi_script\"proyecto_final.md\n</code></pre> </li> <li> <p>Luego cuando se termine de ejecutar el script revisamos con:</p> <pre><code>journalctl -t \"mi_script\"\n</code></pre> </li> <li> <p>Ejecutamos:</p> <pre><code>sudo crontab -e\n</code></pre> </li> <li> <p>A\u00f1adimos la l\u00ednea del cron para que ejecute autom\u00e1ticamente todos los domingos a las 4:00 de la ma\u00f1ana:</p> <pre><code>0 4 * * 0 /home/yo/glpi_backupdual.sh\n</code></pre> </li> </ul> <p>Para configurar autom\u00e1ticamente este proceso de BACKUP de una manera m\u00e1s r\u00e1pida, podemos utilizar el script:</p> <p>Puedes ver el script aqu\u00ed</p> <p>Descargar el archivo</p>"},{"location":"Proyecto_final_git/proyecto_final/#10-script-para-restaurar-en-local","title":"10 - Script para restaurar en local","text":"<ul> <li>Preguntamos que ficheros queremos restaurar (BBDD-GLPI-AMBOS).</li> <li>Vaciamos la BBDD y la restauramos.</li> <li>Restauramos los ficheros de GLPI.</li> </ul> <p>Para configurar autom\u00e1ticamente este proceso de RESTAURACI\u00d3N de una manera m\u00e1s r\u00e1pida, podemos utilizar el script.</p> <p>Puedes ver el script aqu\u00ed</p> <p>Descargar el archivo</p>"},{"location":"Proyecto_final_git/proyecto_final/#11-problemas-y-soluciones","title":"11 - Problemas y soluciones","text":"<p>Problema 1:</p> <ul> <li>La instalaci\u00f3n manual de todo el entorno de GLPI me daba errores humanos muchas veces.</li> </ul> <p>Causa:</p> <ul> <li>Olvidar un paso, escribir mal un comando, falta de una extensi\u00f3n o dependencia, etc..., trae problemas en la instalaci\u00f3n.</li> </ul> <p>Soluci\u00f3n:</p> <ul> <li>Lo fusion\u00e9 todo en un script que me ofrece una forma mucho m\u00e1s r\u00e1pida y eficiente para realizar la instalaci\u00f3n en comparaci\u00f3n con el proceso manual.</li> </ul> <p>Problema 2:</p> <ul> <li>Al instalar PHP8.4 en su \u00faltima versi\u00f3n no funcionaba la aplicaci\u00f3n GLPI.</li> </ul> <p>Causa:</p> <ul> <li>La documentaci\u00f3n oficial de GLPI restringe un rango de versiones (7.4-8.3) de PHP para la \u00faltima versi\u00f3n de GLPI.</li> </ul> <p>Soluci\u00f3n:</p> <ul> <li>Hice constar en la descarga de PHP una versi\u00f3n dentro de este rango, en mi caso (8.3).</li> </ul> <p>Problema 3:</p> <ul> <li>Durante la configuraci\u00f3n de GLPI, la pesta\u00f1a de selecci\u00f3n de zonas horarias no se desplegaba correctamente, mostrando una lista vac\u00eda al intentar asignar husos horarios.</li> </ul> <p>Causa:</p> <ul> <li>Permisos insuficientes.</li> <li>La BBDD no ten\u00eda cargadas las definiciones de zonas horarias.</li> <li>Exist\u00edan formatos de fecha/hora incompatibles en la BBDD de GLPI.</li> </ul> <p>Soluci\u00f3n:</p> <ul> <li>Cargue datos de zonas horarias en MariaDB.</li> <li>Otorgu\u00e9 permisos al usuario de GLPI.</li> <li>Actualic\u00e9 campos obsoletos en la BBDD.</li> </ul> <p>Problema 4:</p> <ul> <li>Durante la configuraci\u00f3n del servidor de correo en GLPI, el uso de Postfix present\u00f3 m\u00faltiples complicaciones (fallos en el env\u00edo, configuraci\u00f3n compleja de DNS, problemas de relay, etc.).</li> </ul> <p>Causa:</p> <ul> <li>Complejidad de Postfix, posibles conflictos con firewalls y errores de autenticaci\u00f3n o permisos en el relay.</li> </ul> <p>Soluci\u00f3n:</p> <ul> <li>Gmail como alternativa usando smtp.gmail.com (puerto 587 con TLS), credenciales con contrase\u00f1a de aplicaci\u00f3n y protecci\u00f3n anti-spam integrada, con lo que tener una alta disponibilidad y robustez evitando ca\u00eddas o problemas de entrega de correo.</li> </ul> <p>Problema 5:</p> <ul> <li>Al implementar notificaciones autom\u00e1ticas en GLPI, el sistema estaba recuperando y reenviando todos los correos antiguos cada vez que se generaba una nueva notificaci\u00f3n.</li> </ul> <p>Causa:</p> <ul> <li>La acci\u00f3n autom\u00e1tica mailgate est\u00e1 configurada para procesar todos los correos almacenados en la cola de notificaciones, incluyendo los hist\u00f3ricos, en lugar de limitarse a los nuevos.</li> </ul> <p>Soluci\u00f3n:</p> <ul> <li>Desactiv\u00e9 el reprocesamiento autom\u00e1tico de correos antiguos.</li> </ul> <p>Problema 6:</p> <ul> <li>Las notificaciones por correo en GLPI no se enviaban inmediatamente, sino que se acumulaban en la cola.</li> </ul> <p>Causa:</p> <ul> <li>Por defecto, GLPI no ejecuta autom\u00e1ticamente el procesamiento y limpieza de la cola de notificaciones, requiriendo una configuraci\u00f3n manual y su integraci\u00f3n con el programador de tareas (cron) del sistema.</li> </ul> <p>Soluci\u00f3n:</p> <ul> <li>Configur\u00e9 las acciones Autom\u00e1ticas en GLP.</li> <li>Active el modo de ejecuci\u00f3n CLI (para permitir su ejecuci\u00f3n desde el cron).</li> <li>Program\u00e9 el front/cron.php, que viene incluido con GLPI, que es un script PHP oficial que GLPI trae para gestionar las acciones autom\u00e1ticas y peri\u00f3dicamente.</li> </ul> <p>Problema 7:</p> <ul> <li>Al intentar configurar el plugin de BorgBase para realizar backups de GLPI directamente a un repositorio remoto de BorgBase, me encontr\u00e9 despu\u00e9s de configurar los par\u00e1metros requeridos, la incapacidad del plugin para comunicarse correctamente con la API de BorgBase. Por tanto me impidi\u00f3 la configuraci\u00f3n de backups automatizados y gestionados a trav\u00e9s de la interfaz de GLPI utilizando BorgBase.</li> </ul> <p>Causa:</p> <ul> <li>Configuraci\u00f3n incorrecta del plugin.</li> </ul> <p>Soluci\u00f3n:</p> <ul> <li>Debido a estas dificultades para establecer una conexi\u00f3n confiable y funcional con el repositorio de BorgBase a trav\u00e9s del plugin, implement\u00e9 un script que gestiona tanto el backup de la BBDD como los ficheros, programando la ejecuci\u00f3n mediante cron y al ejecutarse con sudo nos permite tener los permisos necesarios para acceder a todos los ficheros de GLPI</li> </ul>"},{"location":"Proyecto_final_git/proyecto_final/#12-pagina-de-github","title":"12 - P\u00e1gina de Github","text":""},{"location":"Proyecto_final_git/proyecto_final/#121-enlace-proyecto-final-glpi","title":"12.1 - Enlace Proyecto final GLPI","text":"<p>https://eduherjul.github.io/proyecto-GLPI/</p>"},{"location":"Proyecto_final_git/restaurarlocal_glpi/","title":"Restaurarlocal glpi","text":"<pre><code>#!/bin/bash\n\n#Script para la restauraci\u00f3n de glpi desde un backup local\n\n#Instalaci\u00f3n de dialog\nsudo apt update\nsudo apt install dialog -y\n\n#Funci\u00f3n para capturar el c\u00f3digo de retorno del di\u00e1logo\nfunction acabar() {\n  exit_status=$?\n  # Verificar si se seleccion\u00f3 \"Cancelar\"\n  if [ $exit_status -ne 0 ]; then\n    clear\n    echo \"Operaci\u00f3n cancelada\"\n    exit 1\n  fi\n}\n\n#Funci\u00f3n cancelar (acabar)\nfunction cancelar() {\n  clear\n  echo \"Operaci\u00f3n cancelada\"\n  exit 1\n}\n\n# Funci\u00f3n para vaciar la base de datos\nvaciar_bbdd() {\n    echo \"Vaciando BBDD existente...\"\n    tablas=$(mysql -u \"$usuariodb\" -p\"$passdb\" -D glpi -e \"SHOW TABLES;\" | grep -v Tables_in)\n    for tabla in $tablas; do\n        mysql -u \"$usuariodb\" -p\"$passdb\" -D glpi -e \"DROP TABLE $tabla;\"\n    done\n    echo \"BBDD vaciada.\"\n}\n\n# Funci\u00f3n restaurar la BBDD\nrestaurar_bbdd() {\n    vaciar_bbdd\n    echo \"Restaurando BBDD\"\n    gunzip -kf \"$DB_BACKUP\"\n    SQL_FILE=\"${DB_BACKUP%.gz}\"\n    mysql -u \"$usuariodb\" -p\"$passdb\" glpi &lt; \"$SQL_FILE\"\n    #Aviso\n    dialog --title \"Base de Datos\" \\\n           --msgbox \"Restauraci\u00f3n realizada correctamente\" 0 0\n\n}\n\n# Funci\u00f3n restaurar archivos GLPI\nrestaurar_ficheros() {\n    #Deteniendo Apache\n    systemctl stop apache2\n\n    #Restaurando archivos en $glpiDir\n    tar -xzvf \"$FILES_BACKUP\" -C \"$glpiDir\"\n\n    systemctl start apache2\n    #Aviso\n    dialog --title \"Archivos GLPI\" \\\n           --msgbox \"Restauraci\u00f3n realizada correctamente\" 0 0\n\n}\n\n#Actualizamos el sistema\ndialog --title \"Actualizaci\u00f3n del sistema update-upgrade\" \\\n  --yesno \"\u00bfActualizamos?\" 0 0\nans=$?\nif [ $ans -eq 0 ]; then\n  clear\n  sudo apt dist-upgrade -y &amp;&amp; sudo apt autoremove -y\nfi\n\n# -------------------- CONFIGURACI\u00d3N --------------------\nusuariodb=$(dialog --title \"Usuario de la BBDD\" \\\n  --stdout \\\n  --inputbox \"Nombre\" 0 0)\n#Llamo a la funcion:\nacabar\n\npassdb=$(dialog --title \"Contrase\u00f1a del usuario de la BBDD de GLPI\" \\\n  --stdout \\\n  --inputbox \"Password\" 0 50)\n#Llamo a la funci\u00f3n:\nacabar\nclear\n\nbackupDir=\"/home/yo/glpi_backups\"\nglpiDir=\"/var/www/glpi\"\n# ------------------------------------------------------\nfecha=$(dialog --title \"Introduce fecha backup a restaurar sin ext.(YYYY-MM-DD_HH-MM-SS) (ejem:2025-03-26_16-06-01):\" \\\n  --stdout \\\n  --fselect /home/yo/glpi_backups/ 20 120) #Cambiar el nombre del usuario que este en vigor\n#Llamo a la funcion:\nacabar\nclear\n\n# Rutas de los backups\nsolofecha=$(basename \"$fecha\")\nDB_BACKUP=\"$backupDir/glpi_db_${solofecha}.sql.gz\"\nFILES_BACKUP=\"$backupDir/glpi_files_${solofecha}.tar.gz\"\n\n#Preguntamos la opci\u00f3n que queremos ejecutar\nwhile true; do\n  respuesta=$(\n    dialog --title \"MENU:\" \\\n      --stdout \\\n      --menu \"Opciones:\\n\" 22 75 14 \\\n      1 \"SOLO LA BBDD\" \\\n      2 \"SOLO LOS ARCHIVOS DE GLPI\" \\\n      3 \"AMBOS (BBDD Y ARCHIVOS)\" \\\n      4 \"Finalizar\"\n  )\n\n  case $respuesta in\n\n    1) #Opci\u00f3n restaurar DDBB\n        clear\n        restaurar_bbdd\n        ;;\n\n    2) #Opci\u00f3n restaurar ficheros\n        clear\n        restaurar_ficheros\n        ;;\n    3) #Opci\u00f3n restaurar ambos\n        clear\n        restaurar_bbdd\n        restaurar_ficheros\n        ;;\n\n    4) #Finalizando el menu\n    clear\n    exit 0\n    ;;\n\n    *) #Cancelar la operaci\u00f3n\n        #Llamo a la funci\u00f3n cancelar\n        cancelar\n        ;;\n  esac\ndone\n\nexit 0\n</code></pre>"}]}