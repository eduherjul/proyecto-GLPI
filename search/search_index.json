{"config":{"lang":["es"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Descripci\u00f3n","text":"<ul> <li>Proyecto-final ciclo ASIX: Proyecto SIGEI-GLPI</li> </ul>"},{"location":"Proyecto_final_git/AWSGLPI_script/","title":"AWSGLPI script","text":"<pre><code>#!/bin/bash\n\n#Ejecutaremos el script AWSGLPI_script.sh\n\n# Instalamos la pila LAMP (apache2-mariadb-php) sin GLPI\n\n#Instalaci\u00f3n de dialog\nsudo apt update\nsudo apt install dialog -y\n\n#Funci\u00f3n para capturar el c\u00f3digo de retorno del di\u00e1logo\nfunction acabar() {\n  exit_status=$?\n  # Verificar si se seleccion\u00f3 \"Cancelar\"\n  if [ $exit_status -ne 0 ]; then\n    clear\n    echo \"Operaci\u00f3n cancelada\"\n    exit 1\n  fi\n}\n\n#Actualizamos el sistema\ndialog --title \"Actualizaci\u00f3n del sistema update-upgrade\" \\\n  --yesno \"\u00bfActualizamos?\" 0 0\nans=$?\nif [ $ans -eq 0 ]; then\n  clear\n  sudo apt dist-upgrade -y &amp;&amp; sudo apt autoremove -y\nfi\n\n##### APARTADO APACHE ##########\n\n#Instalamos Apache2\nclear\nsudo apt install apache2 -y\n\n#Realizamos un backup de nuestro 000-defaults.conf\nsudo mv /etc/apache2/sites-available/000-default.conf /etc/apache2/sites-available/000-default.conf.bkp\n\n#Creamos un archivo de configuraci\u00f3n para el sitio de GLPI en Apache\necho \"&lt;VirtualHost *:80&gt;\n        ServerName edu.com\n        DocumentRoot /var/www/glpi/public\n\n        &lt;Directory /var/www/glpi/public&gt;\n            Options Indexes FollowSymLinks\n            AllowOverride All\n            Require all granted\n            RewriteEngine On\n            # Redirect all requests to GLPI router, unless file exists.\n            RewriteCond %{REQUEST_FILENAME} !-f\n            RewriteRule ^(.*)$ index.php [QSA,L]\n        &lt;/Directory&gt;\n\n        ErrorLog ${APACHE_LOG_DIR}/error.log\n        CustomLog ${APACHE_LOG_DIR}/access.log combined\n\n&lt;/VirtualHost&gt;\" | sudo tee /etc/apache2/sites-available/glpi.conf\n\n#Habilitamos el archivo .conf que hemos creado y habilitamos el modulo rewrite\n#Recargamos, activamos y reiniciamos apache2.service\nsudo a2ensite glpi.conf\nsudo a2enmod rewrite\nsudo systemctl reload apache2.service\nsudo systemctl enable apache2.service\nsudo systemctl restart apache2.service\n\n##### APARTADO PHP #############\n\n#Instalamos los repositorios de php y actualizaremos\nsudo apt install software-properties-common apt-transport-https -y\nsudo add-apt-repository ppa:ondrej/php -y\nsudo apt update -y &amp;&amp; sudo apt dist-upgrade -y &amp;&amp; sudo apt autoremove -y\n\n#Poner la \u00faltima versi\u00f3n de php compatible con la version de GLPI\nversion_php=$(dialog --title \"Poner los 2 d\u00edgitos de la \u00faltima version de php compatible\" \\\n  --backtitle \"Revise la documentaci\u00f3n oficial de GLPI\" \\\n  --stdout \\\n  --inputbox \"(ejemplo:8.1)\" 0 0)\n#Llamo a la funcion:\nacabar\n\n#Instalamos la \u00faltima versi\u00f3n de php, reiniciamos\nclear\nsudo apt install php\"$version_php\" php\"$version_php\"-cli php\"$version_php\"-common libapache2-mod-php\"$version_php\" libapache2-mod-fcgid php\"$version_php\"-fpm -y\nsudo systemctl restart apache2.service\n\n#Habilitamos funciones instaladas de php, activamos \"session.cookie_httponly\", habilitamos la funci\u00f3n fpm y recargamos-reiniciamos\nsudo a2enmod proxy_fcgi setenvif\nsudo sed -i '1432s/.*/session.cookie_httponly = on/' /etc/php/\"$version_php\"/fpm/php.ini\nsudo systemctl restart php\"$version_php\"-fpm\nsudo a2enconf php\"$version_php\"-fpm\nsudo systemctl reload apache2.service\nsudo systemctl restart apache2.service\n\n#Instalamos la extensiones (dependencias) que vamos a necesitar para glpi\nsudo apt install -y php\"$version_php\"-{curl,gd,imagick,intl,apcu,memcache,imap,mysqli,ldap,tidy,xmlrpc,pspell,gettext,mbstring,fpm,iconv,xml,xsl,bz2,Phar,zip,exif}\n\n##### APARTADO MARIADB ###############\n\n#Instalamos MariaDB y securizamos (nos permitir\u00e1 poner contrase\u00f1a a la cuenta root de mariaDB)\nsudo apt install mariadb-server -y\n\n#Aviso\ndialog --title \"mysql_secure_installation\" \\\n       --msgbox \"Enter-n-y-Enter_pass-Re_enter_pass-y-y-y-y\" 0 0\nclear       \nsudo mysql_secure_installation\n\n#Creamos una BBDD para GLPI y el usuario con contrase\u00f1a en mariadb-server tambi\u00e9n para la GLPI que exportamos\nnomuser=$(dialog --title \"Creamos el usuario para la BBDD\" \\\n  --backtitle \"Debe ser el mismo que en la BBDD que exportaremos\" \\\n  --stdout \\\n  --inputbox \"Nombre\" 0 0)\n#Llamo a la funcion:\nacabar\n\npassuser=$(dialog --title \"Contrase\u00f1a para el nuevo usuario de GLPI\" \\\n  --stdout \\\n  --inputbox \"Password\" 0 50)\n#Llamo a la funci\u00f3n:\nacabar\nclear\n\n#Ahora creamos la BBDD (glpi), un nuevo usuario para GLPI, damos privilegios y activamos la zona horaria en mysql\nsqlcomandosphp=\"create database glpi; \ncreate user '$nomuser'@'%' identified by '$passuser';\nGRANT ALL PRIVILEGES ON glpi.* TO '$nomuser'@'%';\nGRANT SELECT ON mysql.time_zone_name TO '$nomuser'@'%';\nflush privileges;\"\n\n#Ejecutamos los comandos SQL en mysql\ndialog --title \"Creamos la BBDD con nombre \\\"glpi\\\" para GLPI y el usuario \\\"$nomuser\\\"\" \\\n  --msgbox \"Introducimos la contrase\u00f1a de root \" 0 0\nclear\nsudo mysql -u root -p -e \"$sqlcomandosphp\"\n\n#Cargamos las ZONAS HORARIAS DEL SISTEMA\ndialog --title \"Cargamos las zonas horarias del sistema\" \\\n  --msgbox \"Introducimos la contrase\u00f1a de root \" 0 0\nclear\nsudo mysql_tzinfo_to_sql /usr/share/zoneinfo | sudo mysql -u root -p mysql\n\n#Restauramos la BBDD\necho \"Restauramos la BBDD glpi\"\nmysql -u \"$nomuser\" -p glpi &lt; \"$HOME\"/glpi_backup.sql\n\n# Descomprimimos los archivos de glpi\n# Como el archivo descomprimido ya incluye la estructura var/www/\n# Usamos, --strip-components=2 elimina los 2 primeros niveles de directorio (var/ y www/) al descomprimir.\nsudo tar --strip-components=2 -xzvf \"$HOME\"/glpi_files.tar.gz -C /var/www/\nsudo tar -xzvf \"$HOME\"/glpi_files.tar.gz -C /var/www/\nsudo rm -rf \"$HOME\"/glpi_files.tar.gz\nsudo rm -rf /var/www/html/index.html\n\n# Dar permisos\nsudo chown -R www-data:www-data /var/www/glpi\nsudo chmod -R 755 /var/www/glpi\n\nclear\nexit 0\n</code></pre>"},{"location":"Proyecto_final_git/GLPI_script/","title":"GLPI script","text":"<pre><code>#!/bin/bash\n\n#Script para la instalaci\u00f3n de una pila LAMP (apache2-mariadb-php) y GLPI\n\n#Instalaci\u00f3n de dialog\nsudo apt install dialog -y\n\n#Funci\u00f3n para capturar el c\u00f3digo de retorno del di\u00e1logo\nfunction acabar() {\n  exit_status=$?\n  # Verificar si se seleccion\u00f3 \"Cancelar\"\n  if [ $exit_status -ne 0 ]; then\n    clear\n    echo \"Operaci\u00f3n cancelada\"\n    exit 1\n  fi\n}\n\n#Actualizamos el sistema\ndialog --title \"Actualizaci\u00f3n del sistema update-upgrade\" \\\n  --yesno \"\u00bfActualizamos?\" 0 0\nans=$?\nif [ $ans -eq 0 ]; then\n  clear\n  sudo apt update -y &amp;&amp; sudo apt dist-upgrade -y &amp;&amp; sudo apt autoremove -y\nfi\n\n##### APARTADO APACHE ##########\n\n#Instalamos Apache2\nclear\nsudo apt install apache2 -y\n\n#Realizamos un backup de nuestro 000-defaults.conf\nsudo mv /etc/apache2/sites-available/000-default.conf /etc/apache2/sites-available/000-default.conf.bkp\n\n#Creamos un archivo de configuraci\u00f3n para el sitio de GLPI en Apache\necho \"&lt;VirtualHost *:80&gt;\n        ServerName edu.com\n        DocumentRoot /var/www/glpi/public\n\n        &lt;Directory /var/www/glpi/public&gt;\n            Options Indexes FollowSymLinks\n            AllowOverride All\n            Require all granted\n            RewriteEngine On\n            # Redirect all requests to GLPI router, unless file exists.\n            RewriteCond %{REQUEST_FILENAME} !-f\n            RewriteRule ^(.*)$ index.php [QSA,L]\n        &lt;/Directory&gt;\n\n        ErrorLog \\${APACHE_LOG_DIR}/error.log\n        CustomLog \\${APACHE_LOG_DIR}/access.log combined\n\n&lt;/VirtualHost&gt;\" | sudo tee /etc/apache2/sites-available/glpi.conf\n\n#Habilitamos el archivo .conf que hemos creado y habilitamos el modulo rewrite\n#Recargamos, activamos y reiniciamos apache2.service\nsudo a2ensite glpi.conf\nsudo a2enmod rewrite\nsudo systemctl reload apache2.service\nsudo systemctl enable apache2.service\nsudo systemctl restart apache2.service\n\n##### APARTADO PHP #############\n\n#Instalamos los repositorios de php y actualizaremos\nsudo apt install software-properties-common apt-transport-https -y\nsudo add-apt-repository ppa:ondrej/php -y\nsudo apt update -y &amp;&amp; sudo apt dist-upgrade -y &amp;&amp; sudo apt autoremove -y\n\n#Poner la \u00faltima versi\u00f3n de php compatible con la version de GLPI\nversion_php=$(dialog --title \"Poner los 2 d\u00edgitos de la \u00faltima version de php compatible\" \\\n  --backtitle \"Revise la documentaci\u00f3n oficial de GLPI\" \\\n  --stdout \\\n  --inputbox \"(ejemplo:8.1)\" 0 0)\n#Llamo a la funcion:\nacabar\n\n#Instalamos la \u00faltima versi\u00f3n de php, reiniciamos\nclear\nsudo apt install php\"$version_php\" php\"$version_php\"-cli php\"$version_php\"-common libapache2-mod-php\"$version_php\" libapache2-mod-fcgid php\"$version_php\"-fpm -y\nsudo systemctl restart apache2.service\n\n#Habilitamos funciones instaladas de php, activamos \"session.cookie_httponly\", habilitamos la funci\u00f3n fpm y recargamos-reiniciamos\nsudo a2enmod proxy_fcgi setenvif\nsudo sed -i '1432s/.*/session.cookie_httponly = on/' /etc/php/\"$version_php\"/fpm/php.ini\nsudo systemctl restart php\"$version_php\"-fpm\nsudo a2enconf php\"$version_php\"-fpm\nsudo systemctl reload apache2.service\nsudo systemctl restart apache2.service\n\n#Instalamos la extensiones (dependencias) que vamos a necesitar para glpi\nsudo apt install -y php\"$version_php\"-{curl,gd,imagick,intl,apcu,memcache,imap,mysqli,ldap,tidy,xmlrpc,pspell,gettext,mbstring,fpm,iconv,xml,xsl,bz2,Phar,zip,exif}\n\n##### APARTADO MARIADB ###############\n\n#Instalamos MariaDB y securizamos (nos permitir\u00e1 poner contrase\u00f1a a la cuenta root de mariaDB)\nsudo apt install mariadb-server -y\n\n#Aviso\ndialog --title \"mysql_secure_installation\" \\\n       --infobox \"Enter-n-y-Enter_pass-Re_enter_pass-y-y-y-y\" 0 0\nclear       \nsudo mysql_secure_installation\n\n#Creamos una BBDD para GLPI y un nuevo usuario con contrase\u00f1a en mariadb-server tambi\u00e9n para GLPI\nnomuser=$(dialog --title \"Creamos el usuario para la BBDD\" \\\n  --stdout \\\n  --inputbox \"Nombre\" 0 0)\n#Llamo a la funcion:\nacabar\n\npassuser=$(dialog --title \"Contrase\u00f1a para el nuevo usuario de GLPI\" \\\n  --stdout \\\n  --inputbox \"Password\" 0 50)\n#Llamo a la funci\u00f3n:\nacabar\nclear\n\n#Ahora creamos la BBDD (glpi), un nuevo usuario para GLPI, damos privilegios y activamos la zona horaria en mysql\nsqlcomandosphp=\"create database glpi; \ncreate user '$nomuser'@'localhost' identified by '$passuser';\nGRANT ALL PRIVILEGES ON glpi.* TO '$nomuser'@'localhost';\nGRANT SELECT ON mysql.time_zone_name TO '$nomuser'@'localhost';\nflush privileges;\"\n\n#Ejecutamos los comandos SQL en mysql\ndialog --title \"Creamos la BBDD con nombre \\\"glpi\\\" para GLPI y el usuario \\\"$nomuser\\\"\" \\\n  --msgbox \"Introducimos la contrase\u00f1a de root \" 0 0\nclear\nsudo mysql -u root -p -e \"$sqlcomandosphp\"\n\n##### APARTADO GLPI ###############\n\n#Poner la \u00faltima versi\u00f3n de glpi\nversion_glpi=$(dialog --title \"Poner los 3 d\u00edgitos de la \u00faltima version de GLPI\" \\\n  --backtitle \"Revise la documentaci\u00f3n oficial de  GLPI\" \\\n  --stdout \\\n  --inputbox \"(ejemplo:10.0.1)\" 0 0)\n#Llamo a la funcion:\nacabar\n\n#Descarga de glpi\nclear\nwget https://github.com/glpi-project/glpi/releases/download/\"$version_glpi\"/glpi-\"$version_glpi\".tgz\n\n#Descomprimimos, cambiamos el fichero .tgz a /var/wwww/html, eliminamos el index.html y el .tgz\nsudo tar -zxvf glpi-\"$version_glpi\".tgz -C /var/www/\nsudo rm -rf glpi-\"$version_glpi\".tgz \nsudo rm -rf /var/www/html/index.html\n\n#Damos permisos\nsudo chown -R www-data:www-data /var/www/glpi\nsudo chmod -R 755 /var/www/glpi\n\n#Cargamos las ZONAS HORARIAS DEL SISTEMA\ndialog --title \"Cargamos las zonas horarias del sistema\" \\\n  --msgbox \"Introducimos la contrase\u00f1a de root \" 0 0\nclear\nsudo mysql_tzinfo_to_sql /usr/share/zoneinfo | sudo mysql -u root -p mysql\n\n#Aviso\ndialog --title \"Cuando se inicialize la BBDD, por razones de seguridad, por favor elimine el archivo: \\\"install/install.php\\\"\" \\\n       --msgbox \"sudo rm -rf /var/www/glpi/install/install.php\" 0 0\n\n########Preguntamos si queremos cambiar los LOGOTIPOS DE GLPI###########\ndialog --title \"Cambiar los logotipos de GLPI\" \\\n       --backtitle \"Debe tener el logo-master en el $HOME del servidor\" \\\n  --yesno \"\u00bfQuieres?\" 0 0\nans=$?\nif [ $ans -eq 0 ]; then\n  clear\n  #Llamo a la funci\u00f3n:\n  acabar\n\n  sudo apt install imagemagick -y\n\n  #Funci\u00f3n listar el nombre del logo-master\n  ellogo=$(dialog --title \"Listado de los elementos del $HOME\" \\\n    --backtitle \"Utilizar las flechas de direcci\u00f3n para seleccionar y la barra espaciadora para confirmar la selecci\u00f3n\" \\\n    --stdout \\\n    --fselect \"$HOME\"/ 20 120)\n  #Llamo a la funcion:\n  acabar\n\n  #Hacemos un backup de los logos originales de la aplicaci\u00f3n\n  sudo mv /var/www/glpi/pics/favicon.ico /var/www/glpi/pics/favicon.ico.bkp\n  sudo mv /var/www/glpi/pics/logos/logo-GLPI-100-white.png /var/www/glpi/pics/logos/logo-GLPI-100-white.png.bkp\n  sudo mv /var/www/glpi/pics/logos/logo-GLPI-250-black.png /var/www/glpi/pics/logos/logo-GLPI-250-black.png.bkp\n\n  #Creamos los logos con los tama\u00f1os requeridos (pixeles) que vamos a necesitar\n  unlogo=$(basename \"$ellogo\")\n  sudo convert \"$unlogo\" -resize 32x32\\! favicon.ico\n  sudo convert \"$unlogo\" -resize 100x55\\! logo-GLPI-100-white.png\n  sudo convert \"$unlogo\" -resize 220x130\\! logo-GLPI-250-black.png\n\n  #Cambiamos los permisos a 755\n  sudo chmod 755 favicon.ico\n  sudo chmod 755 logo-GLPI-100-white.png\n  sudo chmod 755 logo-GLPI-250-black.png\n\n  #Copiamos los ficheros de imagen creados de los logos a sus respectivas rutas\n  sudo cp favicon.ico /var/www/glpi/pics/\n  sudo cp logo-GLPI-100-white.png /var/www/glpi/pics/logos/\n  sudo cp logo-GLPI-250-black.png /var/www/glpi/pics/logos/\n\n  #Cambiamos el propietario y el grupo a www-data\n  sudo chown www-data:www-data /var/www/glpi/pics/favicon.ico\n  sudo chown www-data:www-data /var/www/glpi/pics/favicon.ico.bkp\n  sudo chown www-data:www-data /var/www/glpi/pics/logos/logo-GLPI-100-white.png\n  sudo chown www-data:www-data /var/www/glpi/pics/logos/logo-GLPI-100-white.png.bkp\n  sudo chown www-data:www-data /var/www/glpi/pics/logos/logo-GLPI-250-black.png\n  sudo chown www-data:www-data /var/www/glpi/pics/logos/logo-GLPI-250-black.png.bkp\nfi\nclear\nexit 0\n</code></pre>"},{"location":"Proyecto_final_git/mdpdf%20/","title":"Mdpdf","text":"<pre><code>#!/bin/bash\n\n#Script que convierte un archivo Markdown a PDF con formato espec\u00edfico\n# Verificar que se pas\u00f3 al menos un argumento\nif [ $# -ne 1 ]; then\n  echo \"Uso: $0 nombre_base (por ejemplo: proyecto)\"\n  exit 1\nfi\n\n# Asignar nombre base\nBASENAME=\"$1\"\nINPUT=\"${BASENAME}.md\"\nOUTPUT=\"${BASENAME}.pdf\"\n\n# Ejecutar Pandoc con las opciones deseadas\npandoc \"$INPUT\" -o \"$OUTPUT\" \\\n  --from markdown \\\n  --template eisvogel.latex \\\n  --pdf-engine=lualatex \\\n  --listings \\\n  --toc --toc-depth=4\n\n# Mensaje de \u00e9xito\necho \"PDF generado: $OUTPUT\"\n</code></pre>"},{"location":"Proyecto_final_git/proyecto_final/","title":"PROYECTO FINAL DEL CICLO ASIX (Proyecto SIGEI-GLPI)","text":""},{"location":"Proyecto_final_git/proyecto_final/#1-escenario","title":"1 - Escenario","text":""},{"location":"Proyecto_final_git/proyecto_final/#2-estructura-detallada-del-escenario-aws-con-glpi","title":"2 - Estructura Detallada del Escenario AWS con GLPI","text":""},{"location":"Proyecto_final_git/proyecto_final/#diagrama-de-arquitectura","title":"Diagrama de arquitectura","text":""},{"location":"Proyecto_final_git/proyecto_final/#tabla-de-componentes","title":"Tabla de componentes","text":"<pre><code>| Capa           | Componente   | Versi\u00f3n  | Funci\u00f3n                     | Configuraci\u00f3n Recomendada                     |\n|----------------|--------------|----------|-----------------------------|-----------------------------------------------|\n| Infraestructura| AWS EC2      | -        | Hosting de la soluci\u00f3n      | t3.medium (2vCPU, 4GB RAM)                    |\n| SO             | Ubuntu Server| 22.04 LTS| Base del sistema            | Auto-updates habilitados                      |\n| Servidor Web   | Apache       | 2.4.x    | Servir contenido web        | M\u00f3dulos: rewrite, ssl, headers                |\n| Lenguaje       | PHP          | 8.1      | Procesamiento backend       | Extensiones: mysqli, gd, xml, curl, zlib, intl|\n| Base de Datos  | MariaDB      | 10.6+    | Almacenamiento de datos GLPI| InnoDB, utf8mb4_unicode_ci                    |\n| Aplicaci\u00f3n     | GLPI         | 10.x     | Gesti\u00f3n de tickets IT       | Configuraci\u00f3n optimizada para 50+ usuarios    |\n</code></pre>"},{"location":"Proyecto_final_git/proyecto_final/#usuarios-y-permisos","title":"Usuarios y Permisos","text":"<pre><code>| Usuario     | Grupo    | Directorios        | Permisos |\n|-------------|----------|--------------------|----------|\n| www-data    | www-data | /var/www/html/glpi | 750      |\n| mysql       | mysql    | /var/lib/mysql     | 700      |\n| root        | root     | /etc/glpi          | 600      |\n</code></pre>"},{"location":"Proyecto_final_git/proyecto_final/#especificaciones-tecnicas-recomendadas","title":"Especificaciones T\u00e9cnicas Recomendadas","text":"<p>Requerimientos de Hardware.</p> <p>```bash | Componente     | M\u00ednimo | Recomendado | Producci\u00f3n  | |----------------|--------|-------------|-------------| | vCPUs          | 1      | 2           | 4+          | | RAM            | 2GB    | 4GB         | 8GB+        | | Almacenamiento | 20GB   | 50GB        | 100GB+ (SSD)| | IOPS           | 100    | 500         | 1000+       | <pre><code>## 3 - Introducci\u00f3n del proyecto\n\n### 3.1 - Descripci\u00f3n del proyecto\n\n- *El presente proyecto tiene por objeto crear una **aplicaci\u00f3n web de C\u00f3digo abierto** que permita llevar el **control** de los equipos inform\u00e1ticos de una organizaci\u00f3n (empresa particular o de mantenimiento, escuela, instituto, ministerios, agencias, etc...) y sobre todo mantener un **historial ordenado** de todo lo que ocurre con el **soporte t\u00e9cnico.***\n\n### 3.2 - Objetivos del proyecto\n\n- *Tener un **inventario completo** de los dispositivos tecnol\u00f3gicos de la organizaci\u00f3n.*\n- *Gestionar **incidencias** o problemas t\u00e9cnicos de manera ordenada.*\n- *Crear **c\u00f3digos QR** para gestionar puntualmente v\u00eda m\u00f3vil esas incidencias o consultas.*\n- ***Asignar tareas** a t\u00e9cnicos y hacer **seguimiento** de su resoluci\u00f3n.*\n- *Obtener reportes \u00fatiles sobre el **estado del sistema** y los equipos.*\n- *Mejorar la **atenci\u00f3n al usuario interno** de la empresa.*\n\n## 4 - An\u00e1lisis de opciones y requisitos vistos para considerar\n\n### 4.1 - Snipe-IT\n\n![SNIPE-IT](image.png)\n\n***Snipe-IT** es una **aplicaci\u00f3n web de c\u00f3digo abierto** dise\u00f1ada para la **gesti\u00f3n de activos de TI.** Es una soluci\u00f3n popular entre empresas y organizaciones que buscan una herramienta flexible y personalizable para rastrear y administrar sus activos de **hardware y software.***\n\n#### 4.1.1 - Enfoque\n\n- *Principalmente una herramienta de gesti\u00f3n de activos de TI (**ITAM-gesti\u00f3n de activos de TI** ).*\n- *Sobresale en el **seguimiento** de activos de hardware y software, **licencias** e informaci\u00f3n relacionada.*\n\n#### 4.1.2 - Fortalezas\n\n- *Interfaz **f\u00e1cil** de usar.*\n- *S\u00f3lidas capacidades de seguimiento de activos.*\n- *Ideal para organizaciones que necesitan un **inventario detallado** de hardware y software.*\n- *Muy bueno en la gesti\u00f3n de licencias.*\n- *Muy bueno en el rastreo de los activos con **c\u00f3digos de barras y c\u00f3digos QR.***\n\n#### 4.1.3 - Limitaciones\n\n- *Menos robusto en \u00e1reas como la mesa de ayuda y la gesti\u00f3n de servicios en comparaci\u00f3n con **GLPI.***\n\n### 4.2 - GLPI ( Gestionnaire Libre de Parc Informatique)\n\n![GLPI](image-1.png)\n\n*Un software **gratuito y open-source** para gestionar activos de TI (**hardware, software**).\nGLPI permite **administrar inventarios** de equipos, **seguimiento de problemas** y **gesti\u00f3n de tareas** relacionadas con el **mantenimiento** y soporte de **sistemas inform\u00e1ticos**; o sea atender, ayudar, solucionar y rastrear problemas e incidencias (**tickets**).*\n\n#### 4.2.1 - Enfoque\n\n- *Una **suite integral** de gesti\u00f3n de servicios de TI (ITSM).*\n- *Incluye **gesti\u00f3n de activos**, **mesa de ayuda** y **funcionalidades** de mesa de servicio.*\n\n#### 4.2.2 - Fortalezas\n\n- *Centraliza inventarios, incidencias y recursos en una **plataforma web.***\n- ***Multiplataforma + plugins** (flexible y escalable).*\n- *Fuertes herramientas para el **descubrimiento de redes.***\n- *Cumplir normas (ITIL, **auditor\u00edas de software**).*\n\n#### 4.2.3- Limitaciones\n\n- *Puede tener una curva de aprendizaje **m\u00e1s pronunciada.***\n- *La interfaz puede considerarse **menos moderna** que la de **Snipe-IT***\n\n**Snipe-IT es m\u00e1s especializado, se ocupa de el \"que\" tiene la empresa en cuanto a hardware y software.**\n**GLPI es m\u00e1s generalizado, se ocupa de \"como\" la empresa proporciona los servicios inform\u00e1ticos a sus usuarios.**\n\n## 5 - Decisi\u00f3n: GLPI\n\n### 5.1 - Motivos\n\n- *Es una elecci\u00f3n **m\u00e1s s\u00f3lida** que Snipe-IT, ya que ofrece un conjunto completo de **herramientas ITSM**, incluyendo **mesa de ayuda**, gesti\u00f3n de **incidencias, problemas y cambios.***\n- *En definitiva una mayor capacidad de la aplicaci\u00f3n de **crecer** y manejar m\u00e1s amplio volumen de **control de existencias**, o sea m\u00e1s detalle y vigilancia de todo.*\n- *GLPI cuenta con una **comunidad global** de usuarios y desarrolladores que contribuyen a su desarrollo y soporte,esto nos asegura que la herramienta est\u00e9 en **constante evoluci\u00f3n** y que haya **recursos disponibles** para resolver problemas y dudas.*\n- *GLPI es utilizado en todo el mundo, con una **fuerte presencia en Europa y sobre todo en Am\u00e9rica Latina** donde pr\u00e1cticamente es el dominador en ese mercado.*\n- *Su adaptabilidad a diferentes **idiomas y normativas** es lo que lo hace adecuado para **organizaciones internacionales** que buscan una soluci\u00f3n de gesti\u00f3n de IT eficiente y flexible.*\n\n## 6 - Herramientas\n\n### 6.1 Parte servidor (backend)\n\n#### 6.1.1 - Ubuntu Server\n\n![ubuntu-SRV](image-6.png)\n\n***Sistema operativo que nos proporcionar\u00e1 la base para ejecutar los servicios***\n\n- *Es una versi\u00f3n del sistema operativo Ubuntu dise\u00f1ada espec\u00edficamente para su uso en **servidores.***\n- ***No incluye** una interfaz gr\u00e1fica de usuario (GUI), lo que reduce el consumo de recursos y mejora el rendimiento. En su lugar, se administra principalmente a trav\u00e9s de la **l\u00ednea de comandos.***\n- *Ofrece una amplia gama de software y herramientas para configurar diversos **servicios de servidor**, como servidores web (**Apache, Nginx**), servidores de bases de datos (**MySQL, Mariadb, PostgreSQL,...**) y servidores de archivos.*\n- *Ubuntu Server se caracteriza por su **estabilidad y seguridad**, lo que lo convierte en una opci\u00f3n confiable para entornos de producci\u00f3n.*\n- *Recibe **actualizaciones de seguridad** peri\u00f3dicas para proteger contra vulnerabilidades.*\n- *Como parte de la familia Ubuntu, Ubuntu Server es de **c\u00f3digo abierto**, lo que significa que es **gratuito** y se puede modificar y distribuir libremente.*\n- *Usos comunes:*\n  - *Alojar **sitios web** y **aplicaciones web.***\n  - *Servir **BBDD.***\n  - *Administrar **redes y servicios de red.***\n  - *Implementar **servicios en la nube.***\n  - ***Servidores de archivos.***\n\n#### 6.1.2 - Apache\n\n![APACHE](image-2.png)\n\n***Ser\u00e1 el servidor web que nos gestionar\u00e1 las solicitudes HTTP y nos proporcionar\u00e1 las p\u00e1ginas web.***\n\n- *Apache es un software de **servidor web HTTP** de c\u00f3digo **abierto.***\n- *Esto significa que es responsable de recibir **solicitudes de los navegadores** web y enviar las **p\u00e1ginas web** correspondientes al usuario.*\n- *Es una pieza fundamental de la **infraestructura de Internet**, ya que alimenta una gran parte de los sitios web en l\u00ednea.*\n- *Su **arquitectura modular** permite extender sus funcionalidades mediante la instalaci\u00f3n de **m\u00f3dulos adicionales.** Esto lo hace muy flexible y adaptable a diferentes necesidades.*\n- *Funciona en una amplia variedad de **sistemas operativos**, incluyendo **Linux, Windows y macOS.***\n- *Apache es conocido por su **fiabilidad y estabilidad**, lo que lo convierte en una opci\u00f3n popular para **sitios web de alto tr\u00e1fico.***\n- *Cuenta con una gran **comunidad de usuarios y desarrolladores** que proporcionan soporte y contribuyen a su desarrollo.*\n- *Apache es utilizado por muchos proveedores de **alojamiento web** para alojar sitios web de sus clientes.*\n- *Puede utilizarse como servidor de aplicaciones para alojar aplicaciones **web din\u00e1micas.***\n- *Apache tambi\u00e9n puede funcionar como un **servidor proxy**, actuando como intermediario entre los navegadores web y otros servidores.*\n\n#### 6.1.3 - MariaDB\n\n![Mariadb](image-3.png)\n\n***Ser\u00e1 la BBDD que nos almacenar\u00e1 los datos de GLPI.***\n\n- ***Es un sistema de gesti\u00f3n de BBDD relacionales (RDBMS)** de c\u00f3digo **abierto**, las cuales almacenan los datos en **tablas separadas** en lugar de poner todos los datos en un solo sitio.*\n- *MariaDB mantiene alta **compatibilidad con MySQL**, por lo que la mayor\u00eda de las aplicaciones que funcionan con MySQL pueden migrar sin cambios.*\n- *Usa el mismo **formato de archivos, protocolos y APIs** (como PHP, Python, Java, etc.).*\n- *Incluye **motores de almacenamiento** optimizados como Aria, XtraDB (en lugar de InnoDB) y ColumnStore para an\u00e1lisis de datos.*\n- *Soporte para **consultas paralelas** y **optimizaci\u00f3n avanzada.***\n- ***Nuevas funcionalidades:***\n  - ***JSON y GIS:** Soporte mejorado para datos JSON y geogr\u00e1ficos.*\n  - ***Window Functions:** Funciones anal\u00edticas avanzadas (desde MariaDB 10.2).*\n  - ***Temporal Tables:** Tablas que registran cambios hist\u00f3ricos.*\n  - *Incluye caracter\u00edsticas como **encriptaci\u00f3n** de tablas, **autenticaci\u00f3n** con plugins externos (ej. PAM, LDAP) y **roles de usuarios.***\n  - *Empresas como Google, Wikipedia, Red Hat, Ubuntu (es el RDBMS predeterminado en muchas distribuciones Linux) y Alibaba lo utilizan en producci\u00f3n.*\n\n#### 6.1.4 - PHP\n\n![php](image-4.png)\n\n***Ser\u00e1 el lenguaje de programaci\u00f3n que ejecutar\u00e1 el c\u00f3digo de GLPI y nos generar\u00e1 las p\u00e1ginas din\u00e1micas.***\n\n- ***PHP (Hypertext Preprocessor)** es un lenguaje de programaci\u00f3n de c\u00f3digo **abierto** especialmente dise\u00f1ado para el desarrollo web y la creaci\u00f3n de sitios din\u00e1micos. Se ejecuta en el servidor **(backend)** y permite interactuar con **BBDD**, generar contenido **din\u00e1mico** y manejar sesiones de usuarios.*\n- *El c\u00f3digo PHP se ejecuta en el servidor (como **Apache o Nginx**), generando **HTML** que se env\u00eda al navegador.*\n- *Similar a **C, Java o Perl**, con **tipado din\u00e1mico.***\n- *Soporte **nativo** para MySQL/MariaDB, PostgreSQL, SQLite, MongoDB y m\u00e1s.*\n- *Funciona en Windows, Linux, macOS y es usado por **CMS** como WordPress, Drupal y Joomla.*\n- *Soporta **programaci\u00f3n orientada a objetos** (POO) y tiene miles de librer\u00edas (**framework** como Laravel, Symfony).*\n- *Se utiliza para crear p\u00e1ginas web din\u00e1micas (ej.: tiendas online, blogs, foros), desarrollar **APIs** (junto con **JSON o XML**),**automatizar** tareas del servidor (ej.: enviar emails, subir archivos), etc...*\n\n#### 6.1.5 - GLPI\n\n![GLPI](image-1.png)\n\n***Ser\u00e1 la aplicaci\u00f3n detallada anteriormente que se instalar\u00e1 en el servidor y que nos gestionar\u00e1 los activos de TI con todos los servicios que nos ofrece.***\n\n#### 6.1.6 - AWS\n\n![AWS](image-5.png)\n\n***La instancia ser\u00e1 la MV en la nube que nos alojar\u00e1 todo lo anterior.***\n\n- ***AWS, o Amazon Web Services**, es una plataforma de servicios en la **nube** que ofrece una amplia gama de **herramientas y soluciones.** Empresas y desarrolladores usan AWS para **almacenar datos, alojar aplicaciones, crear infraestructura virtual** y mucho m\u00e1s.*\n- ***Computaci\u00f3n:** Con Amazon EC2, podemos ejecutar **servidores** virtuales para nuestras aplicaciones.*\n- ***Almacenamiento:** Amazon S3  nos permite guardar grandes cantidades de datos con **alta disponibilidad y seguridad.***\n- ***BBDD:** Podemos administrarlas con servicios como Amazon RDS.*\n- ***Inteligencia artificial:** AWS tiene herramientas para aprendizaje autom\u00e1tico, an\u00e1lisis de datos y procesamiento de lenguaje natural.*\n\n***En resumen, el servidor nos manejar\u00e1 toda la l\u00f3gica, el almacenamiento y la generaci\u00f3n de contenido.***\n\n### 6.2 Parte del cliente web (frontend)\n\n#### 6.2.1 - Google Chrome\n\n![Google Chrome](image-7.png)\n\n***Ser\u00e1 el navegador WEB que nos interpretar\u00e1 y nos mostrar\u00e1 las p\u00e1ginas generadas por el servidor.***\n\n- *Es un **software** que nos permite acceder a Internet y visualizar p\u00e1ginas web.*\n- *Que entre sus principales **funciones** se incluye:*\n  - ***Velocidad:** Chrome es conocido por su velocidad y eficiencia, lo que permite cargar p\u00e1ginas web r\u00e1pidamente.*\n  - ***Simplicidad:** Tiene una interfaz de usuario sencilla y f\u00e1cil de usar.*\n  - ***Seguridad:** Chrome incluye funciones de seguridad integradas para proteger a los usuarios de malware y sitios web peligrosos.*\n  - ***Sincronizaci\u00f3n:** Permite sincronizar marcadores, historial y contrase\u00f1as entre diferentes dispositivos.*\n  - ***Extensiones:** Ofrece una amplia variedad de extensiones que permiten personalizar y ampliar la funcionalidad del navegador.*\n  - ***Integraci\u00f3n con servicios de Google:** Se integra perfectamente con otros servicios de Google, como la B\u00fasqueda de Google, GMail y YouTube.*\n  - ***Multiplataforma:** Est\u00e1 disponible para m\u00faltiples sistemas operativos, incluyendo Windows, macOS, Linux, Android e iOS.*\n\n#### 6.2.2 - La interfaz de GLPI\n\n![GLPI](image-1.png)\n\n***Es la que el usuario ve, maneja y toca todo lo relacionado con la experiencia de usuario***\n\n- *La interfaz de GLPI **realiza** lo siguiente:*\n  - ***Muestra la UI:** Renderiza men\u00fas, formularios y datos (HTML/CSS generados por PHP).*\n  - ***Gestiona interacciones:** Validaciones, clics y peticiones.*\n  - ***Se comunica con el backend:** Env\u00eda/recibe datos al servidor PHP.*\n\n***En resumen el cliente: Interfaz visual + acciones del usuario.***\n\n### 6.3 - Recursos para la documentaci\u00f3n\n\n#### 6.3.1 - Visual Studio Code (VS Code)\n\n![VS Code](image-8.png){ width=15% }\n\n***Editor de c\u00f3digo fuente desarrollado por Microsoft, ligero, r\u00e1pido y muy personalizable que utilizaremos para ajustar el documento del proyecto.***\n\n- ***Caracter\u00edsticas principales:***\n  - *Sirve para **escribir c\u00f3digo** en muchos lenguajes.*\n  - ***Gratis y de c\u00f3digo abierto.***\n  - *Funciona en **Windows, macOS y Linux.***\n  - *Tiene **extensiones** para a\u00f1adir funciones extra (por ejemplo, ayuda para depurar c\u00f3digo, colorear la sintaxis, conectar con Git, etc.).*\n  - ***Autocompletado** inteligente con inteligencia artificial (como Copilot).*\n  - *Integraci\u00f3n con **terminal, control de versiones (Git) y depuraci\u00f3n.***\n\n***VS Code nos ayuda en un rompecabezas (valga la expresi\u00f3n) a organizar nuestras piezas, nos da ideas de c\u00f3mo unirlas y nos avisa si algo no encaja bien.***\n\n#### 6.3.2 - Markdown\n\n![Markdown](image-9.png){ width=15% }\n\n***Markdown es un lenguaje de marcado ligero que nos permite dar formato a texto plano de manera sencilla, donde los cambios de formato se ven inmediatamente, Markdown utiliza una sintaxis simple para indicar c\u00f3mo debe formatearse el texto sin usar botones ni men\u00fas.\nSer\u00e1 el lenguaje que utilizaremos para describir el proyecto.***\n\n- ***Caracter\u00edsticas clave:***\n  - ***Sencillez:***\n    - *Su sintaxis es f\u00e1cil de aprender y recordar, lo que permite escribir documentos formateados r\u00e1pidamente.*\n  - ***Legibilidad:***\n    - *Los archivos Markdown son legibles incluso en su forma de texto plano, sin necesidad de renderizarlos.*\n  - ***Portabilidad:***\n    - *Los archivos Markdown se pueden abrir y editar en cualquier editor de texto, lo que los hace independientes de plataformas y software espec\u00edficos.*\n  - ***Versatilidad:***\n    - *Markdown se puede utilizar para crear una variedad de documentos, desde simples notas hasta documentaci\u00f3n t\u00e9cnica y p\u00e1ginas web.*\n  - ***Compatibilidad:***\n    - *Muchos sitios web y aplicaciones, como GitHub, Reddit y Slack, admiten Markdown.*\n\n***Markdown es una forma f\u00e1cil y r\u00e1pida de escribir texto con formato (como t\u00edtulos, negritas, listas o enlaces) usando solo el teclado, sin men\u00fas ni botones.***\n\n**6.3.3 - Tex Live.**\n\n![Tex Live](image-10.png){ width=20% }\n\n***TeX Live es un conjunto de programas para escribir y compilar informes en LaTeX que es adem\u00e1s un sistema para crear documentos muy bien presentados.\nSer\u00e1 el compilador para generar nuestro documento PDF del proyecto.***\n\n- ***Caracter\u00edsticas:***\n  - ***LaTeX** ser\u00e1 el lenguaje especial que escribir\u00e1 y transformar\u00e1 nuestro documento en uno mejor visualmente.*\n  - ***TeX Live** es la **caja de herramientas** que necesitamos para que LaTeX funcione en nuestro ordenador.*\n\n***Nos incluye:***\n\n- ***LuaLaTeX:** Es una variante de **LaTeX** que utiliza **LuaTeX** como su **motor de procesamiento** en lugar de pdfTeX o XeTeX.\n  Permite una mayor flexibilidad y personalizaci\u00f3n, ya que incluye el lenguaje de programaci\u00f3n **Lua**, lo que permite a los usuarios extender las capacidades de LaTeX mediante scripts y configuraciones avanzadas.\n  Es especialmente \u00fatil para quienes necesitan funcionalidades adicionales como manipulaci\u00f3n de **fuentes o gr\u00e1ficos personalizados***.\n\n***Tex Live es un sistema de Tipograf\u00eda para Documentaci\u00f3n PDF.***\n\n#### 6.3.4 - Pandoc\n\n![Pandoc](Image-36.png){ width=20% }\n\n***Pandoc es una herramienta de software libre y de c\u00f3digo abierto que se utiliza para convertir documentos de un formato a otro. Se le conoce como el \"convertidor universal de documentos\" debido a su amplia capacidad para manejar una gran variedad de formatos de entrada y salida y por tanto ser\u00e1 el conversor que utilizar\u00e9 para trasformar el documento del proyecto de Markdown a PDF.***\n\n- ***Extremadamente \u00fatil** para tareas como la **creaci\u00f3n de libros electr\u00f3nicos**, la **generaci\u00f3n de informes**, la **conversi\u00f3n de documentos web** a otros formatos, y mucho m\u00e1s.*\n- *Es muy flexible y permite **personalizar** la salida de diversas maneras, incluyendo la **modificaci\u00f3n de estilos**, la **inclusi\u00f3n de metadatos**, y la **manipulaci\u00f3n de la estructura** del documento.*\n- *Muy \u00fatil para la creaci\u00f3n de **documentos acad\u00e9micos**, ya que se integra con **gestores de referencias bibliogr\u00e1ficas**.*\n\n#### 6.3.5 - Eisvogel\n\n![Eisvogel](Image-37.png){ width=20% }\n\n***Herramienta que mejora la presentaci\u00f3n de documentos convertidos desde markdown a pdf, por tanto ser\u00e1 la plantilla que nos facilitar\u00e1 la mejora de calidad en la creaci\u00f3n del documento final de nuestro proyecto.***\n\n- *Es una **plantilla de LaTeX para Pandoc**, dise\u00f1ada espec\u00edficamente para crear documentos **PDF** con una apariencia **profesional y elegante**.*\n- *Muy popular para generar **informes, presentaciones** y otros **documentos t\u00e9cnicos** a partir de archivos **Markdown**.*\n- *Gran cantidad de opciones de **personalizaci\u00f3n**, incluyendo la posibilidad de cambiar los **colores**, las **fuentes** y el **dise\u00f1o** del documento.*\n- *Facilita la creaci\u00f3n de documentos LaTeX de **alta calidad** a partir de archivos Markdown, simplificando el proceso de **publicaci\u00f3n**.*\n\n### 6.4 - Publicaci\u00f3n y Alojamiento de la Documentaci\u00f3n en la Web\n\n**6.4.1 - MkDocs.**\n\n![MkDocs](image-11.png){ width=15% }\n\n***Es un generador r\u00e1pido de p\u00e1ginas web est\u00e1ticas orientado a la creaci\u00f3n de documentaci\u00f3n de proyectos.\nSer\u00e1 nuestro sitio HTML en donde se alojar\u00e1 nuestra documentaci\u00f3n del proyecto.***\n\n- *Los archivos fuente de documentaci\u00f3n se escriben en **Markdown** y se configuran con un solo archivo de configuraci\u00f3n **YAML**, que es un formato de serializaci\u00f3n de datos legible por humanos inspirado en lenguajes como XML, C, Python o Perl.*\n\n- *Con **MkDocs** podemos crear sitios HTML est\u00e1ticos que se pueden alojar en p\u00e1ginas **GitHub** o en cualquier otro lugar que elijamos. En nuestro caso lo haremos en **GitHub.***\n\n- *Existen infinidad de **temas o plantillas** disponibles para MkDocs que podemos elegir de entre los integrados, seleccionar alguno de los que se citan en la wiki [MkDocs Themes](https://github.com/mkdocs/mkdocs/wiki/MkDocs-Themes) o crear el nuestro propio con [Material for MkDocs](https://squidfunk.github.io/mkdocs-material/).*\n\n- *Una de las grandes ventajas que nos ofrece MkDocs es la de obtener una **vista previa** de nuestro sitio mientras trabajamos. Esto se consigue mediante el **servidor de desarrollo** incorporado que incluso recargar\u00e1 y actualizar\u00e1 autom\u00e1ticamente nuestro navegador cada vez que guardemos los cambios.*\n\n- *MkDocs es f\u00e1cil de **personalizar** por lo que permite obtener la documentaci\u00f3n de nuestro proyecto tal como lo deseamos personalizando el tema y/o instalando algunos complementos*\n\n***Combina simplicidad con flexibilidad, permiti\u00e9ndonos personalizar el dise\u00f1o con temas y complementos.***\n\n**6.4.2 - GitHub.**\n\n![GitHub](image-12.png){ width=25% }\n\n***GitHub es una plataforma en l\u00ednea dise\u00f1ada para el desarrollo y la colaboraci\u00f3n de software. Es el lugar donde desarrolladores y equipos pueden almacenar, compartir y trabajar juntos en proyectos.\nEn nuestro caso ser\u00e1 la plataforma que alojar\u00e1 nuestro documento del proyecto, para una posterior visualizaci\u00f3n.***\n\n- *Esto permite realizar un **seguimiento** de los cambios en el c\u00f3digo a lo **largo del tiempo** y facilita la **colaboraci\u00f3n** en proyectos, ya que varias personas pueden trabajar en el mismo c\u00f3digo **simult\u00e1neamente.***\n\n- *En GitHub, **podemos:***\n\n  - ***Alojar repositorios:** Guardar tus proyectos de c\u00f3digo en un lugar centralizado.*\n\n  - ***Colaborar:** Trabajar con otros desarrolladores, proponiendo y revisando cambios a trav\u00e9s de \"pull requests\".*\n\n  - ***Control de versiones:** Ver el historial de cambios, qui\u00e9n los hizo y por qu\u00e9.*\n  - ***Automatizar tareas:** Usar \"GitHub Actions\" para automatizar pruebas, despliegues y m\u00e1s.*\n  - ***Publicar sitios web:** Utilizar **GitHub Pages** para alojar sitios web est\u00e1ticos directamente desde tus repositorios.*\n\n***Es una herramienta que fomenta la transparencia, la organizaci\u00f3n y la colaboraci\u00f3n.***\n\n## 7 - Instalaci\u00f3n y configuraci\u00f3n de las herramientas a utilizar\n\n### 7.1 - AWS con Ubuntu Server 24.04\n\n![AWS](image-5.png){ width=20% } ![ubuntu-SRV](image-6.png){ width=25% }\n\n#### Creaci\u00f3n de una instancia EC2 en AWS\n\n- ***Paso 1. Iniciamos el laboratorio.***\n  - *Desde el curso de AWS Academy iniciamos el laboratorio pulsando en Start Lab y esperamos a que el icono que aparece junto al texto de AWS se ponga de **color verde**.*\n\n![Inicio](image-14.png){ width=65% }\n\n- ***Paso 2.Accedemos a la consola de Administraci\u00f3n de AWS.***\n  - *Desde la consola seleccionamos el servicio de **EC2**.*\n\n![EC2](image-15.png){ width=40% }\n\n- ***Paso 3. Buscamos el bot\u00f3n \"Launch Instance\" para crear una instancia EC2.***\n\n![Lanzar-instancia](image-16.png){ width=50% }\n\n- ***Paso 4. Le asignamos un nombre a la instancia EC2 que vamos a crear.***\n\n![Nombre](image-17.png){ width=100% }\n\n- ***Paso 5. Seleccionamos la AMI y la arquitectura de la instancia EC2.***\n  - *En este paso tenemos que seleccionar la **AMI** (Amazon Machine Image) y la arquitectura. Para mi proyecto voy a seleccionar la imagen **Ubuntu Server 24.04 LTS (HVM), SSD Volume Type**, y la **arquitectura 64 bits (x86).***\n\n![SO](image-18.png){ width=90% }\n\n- ***Paso 6. Seleccionamos el tipo de instancia EC2.***\n  - *Seleccionamos que vamos a crear una instancia de tipo **t2.micro.** que cuenta con 1 vCPU y 1 GiB de RAM.*\n\n![t2.micro](image-19.png){ width=90% }\n\n- ***Paso 7. Seleccionamos la clave p\u00fablica SSH que le vamos a inyectar a la instancia EC2.***\n  - *En este ejemplo vamos a utilizar la clave p\u00fablica **vockey** que est\u00e1 asociada a nuestra cuenta de usuario en la plataforma AWS Learner Lab. La clave privada la descargaremos m\u00e1s adelante desde la plataforma, para poder conectarnos por SSH con la instancia EC2.*\n\n![nombre-clave](image-21.png){ width=90% }\n\n![Crear-claves](image-20.png){ width=60% }\n\n- ***Paso 8. Configuramos los grupos de seguridad.***\n- *En este proyecto vamos a crear un nuevo grupo de seguridad y vamos a utilizar tres reglas para permitir tr\u00e1fico **SSH, HTTP y HTTPS.***\n  - *SSH. Protocolo: TCP. Puerto: 22. Origen: 0.0.0.0/0*\n  - *HTTP. Protocolo: TCP. Puerto: 80. Origen: 0.0.0.0/0*\n  - *HTTPS. Protocolo: TCP. Puerto: 443. Origen: 0.0.0.0/0*\n\n![Seguridad](image-22.png){ width=90% }\n\n- ***Paso 9. A\u00f1adimos el almacenamiento que utilizar\u00e1 la instancia.***\n  - *En este paso configuramos cu\u00e1l ser\u00e1 el almacenamiento que utilizar\u00e1 la instancia EC2 que estamos creando.*\n  - *Para nuestro ejemplo en el proyecto no vamos a modificar ninguno de los par\u00e1metros que aparecen por defecto y utilizaremos un disco SSD de 8 GB.*\n\n![Almacenamiento](image-23.png){ width=100% }\n\n- ***Paso 10. Revisamos la configuraci\u00f3n seleccionada.***\n  - *Para crear la instancia pinchamos sobre el bot\u00f3n **Lanuch Instance.***\n\n![Resumen](image-24.png){ width=40% }\n\n- ***Paso 11. Estado de la instancia.***\n  - *En este paso nos aparece un mensaje indicando que la instancia se est\u00e1 creando.*\n    **Pincharemos sobre el identificador de la instancia que aparece en el cuadro de color verde.****\n\n![Creando](image-25.png){ width=70% }\n\n- ***Paso 12. Consultaremos el estado de la instancia desde la consola de administraci\u00f3n.***\n  - *Cuando pasen unos segundos le aparecer\u00e1 en la consola la instancia que acaba de crear.\nCuando la instancia muestre que est\u00e1 en estado **Running** es que est\u00e1 preparada para\nconectarnos a ella.*\n\n![Estado](image-26.png){ width=80% }\n\n#### Nos conectamos a la instancia por SSH para ejecutar los comandos de instalaci\u00f3n de las herramientas del proyecto\n\n- ***Paso 1. Seleccionamos la instancia y pinchamos sobre \"Conectar\".***\n\n![Conectar](image-27.png){ width=100% }\n\n- ***Paso 2. Vamos a obtener el comando para conectarnos desde un cliente SSH en Linux.***\n  - *En este paso nos aparece c\u00f3mo podemos conectarnos a la instancia que acabamos de crear.*\n  - *Seleccionaremos la opci\u00f3n **SSH client**, y veremos los pasos que tenemos que realizar para conectarnos a la instancia.*\n  - *El comando que tenemos que utilizar para conectarnos a la instancia lo podemos copiar en este paso. En el comando aparece el nombre del archivo **.pem** de la clave privada (que hemos creado), el nombre del usuario y el nombre DNS p\u00fablico de la instancia.*\n\n![Copiar-SSH](image-28.png){ width=80% }\n\n- *En nuestro caso al **crear par de claves** ya las hemos ubicado en el directorio **M\u00fasica**, pero se pueden descargar pinchando sobe el texto **AWS Details** y le aparecer\u00e1 en la parte derecha la posibilidad de descargar la clave como un archivo **.PEM o .PPK.**\nEn Linux utilizaremos la clave **.PEM**, cuando descarguemos la clave se descargar\u00e1 como **nombre.pem o nombre.ppk.***\n\n![AWS Details](image-29.png){ width=100% }\n\n![Download.pem](image-30.png){ width=40% }\n\n- ***Paso 3. Nos conectamos por SSH desde Linux.***\n\n- *Cambiamos los permisos del archivo para que solo el propietario tenga permisos de lectura.*\n\n`sudo chmod 400 clave_aws.pem`\n\n- *Ejecutamos el comando que copiamos en el **paso 2** para conectarnos por SSH a la instancia EC2 desde un terminal de Linux. El comando ser\u00e1 parecido al este, pero el nombre DNS de la instancia ser\u00e1 diferente.*\n\n`sudo ssh -i \"clave_AWS.pem\" ubuntu@ec2-34-239-105-173.compute-1.amazonaws.com`\n\n![alt text](image-31.png){ width=100% }\n\n### 7.2 - Creaci\u00f3n de la pila LAMP (Linux, Apache, MariaDB y PHP)\n\n**INSTALACI\u00d3N DE APACHE.**\n\n![APACHE](image-2.png){ width=20% }\n\n***Paso 1. Instalamos:***\n\n```bash\nsudo apt update\nsudo apt install apache2 -y\n</code></pre></p> <p>Paso 2. Realizamos un backup de nuestro 000-defaults.conf</p> <pre><code>sudo mv /etc/apache2/sites-available/000-default.conf /etc/apache2/sites-available/000-default.conf.bkp\n</code></pre> <p>Paso 3. Creamos un archivo de configuraci\u00f3n (glpi.conf) para el sitio de GLPI en Apache como nos indica la \"Documentaci\u00f3n Oficial de GLPI\".</p> <p>https://glpi-install.readthedocs.io/en/latest/prerequisites.html#web-server</p> <p>GLPI recomienda no colocarlo en el directorio por default de Apache \"/var/www/html\", sugiere colocarlo por fuera por lo cual lo colocaremos en \"/var/www\".</p> <p><code>sudo nano /etc/apache2/sites-available/glpi.conf</code></p> <pre><code>&lt;VirtualHost *:80&gt;\n    ServerName edu.com\n    DocumentRoot /var/www/glpi/public\n\n    &lt;Directory /var/www/glpi/public&gt;\n        Options -Indexes +FollowSymLinks\n        AllowOverride All\n        Require all granted\n        RewriteEngine On\n        # Redirect all requests to GLPI router, unless file exists.\n        RewriteCond %{REQUEST_FILENAME} !-f\n        RewriteRule ^(.*)$ index.php [QSA,L]\n    &lt;/Directory&gt;\n\n    ErrorLog ${APACHE_LOG_DIR}/glpi-error.log\n    CustomLog ${APACHE_LOG_DIR}/glpi-access.log combined\n\n&lt;/VirtualHost&gt;    \n</code></pre> <p>Paso 4. Habilitamos el archivo .conf que hemos creado y habilitamos el modulo rewrite.</p> <pre><code>sudo a2ensite glpi.conf\nsudo a2enmod rewrite\n</code></pre> <p>Paso 5. Recargamos, activamos y reiniciamos apache2.service</p> <pre><code>sudo systemctl reload apache2.service\nsudo systemctl enable apache2.service\nsudo systemctl restart apache2.service\n</code></pre> <p>INSTALACI\u00d3N DE PHP.</p> <p>{ width=25% }</p> <p>Paso 1. Instalaremos los repositorios de php y actualizaremos.</p> <pre><code>sudo apt install software-properties-common apt-transport-https -y\nsudo add-apt-repository ppa:ondrej/php -y\nsudo apt update\n</code></pre> <p>Paso 2. Instalamos la versi\u00f3n de php que nos indica la \"Documentaci\u00f3n Oficial de GLPI\", los paquetes necesarios y reiniciamos.</p> <p>https://glpi-install.readthedocs.io/en/latest/prerequisites.html#php</p> <p>{ width=40% }</p> <pre><code>sudo apt install php8.3 php8.3-cli php8.3-common libapache2-mod-php8.3 -y\nsudo apt install libapache2-mod-fcgid php8.3-fpm -y\nsudo systemctl restart apache2.service\n</code></pre> <p>Paso 3. Activamos variable \"session.cookie_httponly\" a \"on\" en \"/etc/php/8.3/fpm/php.ini\" y reiniciamos.</p> <p><code>sudo nano /etc/php/8.3/fpm/php.ini</code></p> <ul> <li>Buscamos con el editor la variable session.cookie = y la activamos con on.</li> </ul> <p>Es una medida de seguridad importante para proteger las sesiones de usuario en aplicaciones web PHP. Ayuda a prevenir el robo de cookies y la suplantaci\u00f3n de identidad. Se recomienda habilitar esta directiva en todos los entornos de producci\u00f3n.</p> <p><code>sudo systemctl restart php8.3-fpm</code></p> <p>Paso 4. Habilitamos funciones instaladas de php, habilitamos la funci\u00f3n \"fpm\" y recargamos-reiniciamos</p> <pre><code>sudo a2enmod proxy_fcgi setenvif\nsudo a2enconf php8.3 -fpm\nsudo systemctl reload apache2.service\nsudo systemctl restart apache2.service\n</code></pre> <p>Instalamos la extensiones y dependencias que vamos a necesitar para la posterior instalaci\u00f3n de \"GLPI\".</p> <pre><code>sudo apt install -y php8.3-{curl,gd,imagick,intl,apcu memcache,imap,mysqli,ldap,tidy,xmlrpc,pspell,gettext,mbstring,fpm,iconv,xml,xsl,bz2,Phar,zip,exif}\n</code></pre> <p>INSTALACI\u00d3N DE MARIADB.</p> <p>{ width=25% }</p> <p>Paso 1.Instalamos mariadb-server y securizamos.</p> <ul> <li>Seguimos los pasos, colocamos una nueva contrase\u00f1a para el usuario root de la BBDD, eliminamos las BBDD de prueba y eliminamos el acceso a usuarios an\u00f3nimos (enter,n,y,enter-pass,Re-enter-pass,y,y,y,y).</li> </ul> <pre><code>sudo apt install mariadb-server -y\nsudo mysql_secure_installation\n</code></pre> <p>Paso 2. Creamos una BBDD en nuestro caso \"glpi\", un usuario para GLPI en MariaDB, damos privilegios y adem\u00e1s activaremos la zona horaria en mysql.</p> <ul> <li>Podemos cambiar los datos que deseemos, nombre de  usuario y BBDD, y colocaremos una contrase\u00f1a apropiada.</li> </ul> <pre><code>sudo mysql -u root -p\nCREATE DATABASE glpi; \nCREATE USER '&lt;nomuser&gt;'@'%' IDENTIFIED BY &lt;'passuser'&gt;;\nGRANT ALL PRIVILEGES ON glpi.* TO '&lt;nomuser&gt;'@'%';\nGRANT SELECT ON mysql.time_zone_name TO '&lt;nomuser&gt;'@'%';\nflush privileges;\nexit;\n</code></pre> <p>Paso 3. Cargamos las zonas horarias del sistema (introducimos la contrase\u00f1a de root).</p> <pre><code>sudo mysql_tzinfo_to_sql /usr/share/zoneinfo | sudo mysql -u root -p mysql\n</code></pre> <p>DESCARGA E INSTALACI\u00d3N DE GLPI.</p> <p>{ width=15% }</p> <ul> <li>Paso 1. Procederemos desde su sitio oficial, la \u00faltima versi\u00f3n para la fecha es la \"10.0.18\".</li> </ul> <p>https://glpi-project.org/es/descargar-software/</p> <pre><code>wget https://github.com/glpi-project/glpi/releases/download/10.0.18/glpi-10.0.18.tgz\n</code></pre> <ul> <li>Paso 2. Descomprimimos el archivo y lo movemos (-C) al directorio \"/var/www\"</li> <li> <p>Posteriormente eliminaremos el fichero .tgz, que no lo necesitaremos y el index.html para no tener problemas.</p> <pre><code>sudo tar -zxvf glpi-10.0.18.tgz -C /var/www/\nsudo rm -rf glpi-10.0.18.tgz \nsudo rm -rf /var/www/html/index.html\n</code></pre> </li> <li> <p>Paso 3. Le damos al usuario de apache la propiedad de la carpeta y permisos.</p> </li> </ul> <pre><code>sudo chown -R www-data:www-data /var/www/glpi\nsudo chmod -R 755 /var/www/glpi\n</code></pre> <ul> <li> <p>Paso 4 (opcional). Si queremos cambiar los logotipos de GLPI, tendremos que tener en el $HOME de nuestro servidor el logo-master que cambiar\u00e1 los de la aplicaci\u00f3n.</p> </li> <li> <p>Una vez consultada la p\u00e1gina oficial de las recomendaciones para determinar el tama\u00f1o (pixel) de los logos de cada sitio, procederemos a crearlos.</p> <p>https://glpi-plugins.readthedocs.io/en/latest/branding/index.html</p> </li> <li> <p>Tendremos que tener instalado en el sistema imagemagick para poder crear con el comando converter los ficheros de imagen de los logos con los tama\u00f1os que se nos indica.</p> <p><code>sudo apt install imagemagick -y</code></p> </li> <li> <p>Haremos un backup de los logos originales de la aplicaci\u00f3n.</p> <pre><code>sudo mv /var/www/glpi/pics/favicon.ico /var/www/glpi/pics/favicon.ico.bkp\nsudo mv /var/www/glpi/pics/logos/logo-GLPI-100-white.png /var/www/glpi/pics/logos/logo-GLPI-100-white.png.bkp\nsudo mv /var/www/glpi/pics/logos/logo-GLPI-250-black.png /var/www/glpi/pics/logos/logo-GLPI-250-black.png.bkp\n</code></pre> </li> <li> <p>Crearemos los ficheros de imagen de los logos con los tama\u00f1os requeridos (pixeles) que vamos a necesitar.</p> <pre><code>sudo convert $HOME/&lt;logo-master&gt; -resize 32x32\\! favicon.ico\nsudo convert $HOME/&lt;logo-master&gt; -resize 100x55\\! logo-GLPI-100-white.png\nsudo convert $HOME/&lt;logo-master&gt; -resize 220x130\\! logo-GLPI-250-black.png\n</code></pre> </li> <li> <p>Cambiamos los permisos de los ficheros creados a 755.</p> <pre><code>sudo chmod 755 favicon.ico\nsudo chmod 755 logo-GLPI-100-white.png\nsudo chmod 755 logo-GLPI-250-black.png\n</code></pre> </li> <li> <p>Copiamos los ficheros de imagen creados de los logos a sus respectivas rutas.</p> <pre><code>sudo cp favicon.ico /var/www/glpi/pics/\nsudo cp logo-GLPI-100-white.png /var/www/glpi/pics/logos/\nsudo cp logo-GLPI-250-black.png /var/www/glpi/pics/logos/\n</code></pre> </li> <li> <p>Cambiamos el propietario y el grupo de todos los ficheros a www-data.</p> <pre><code>sudo chown www-data:www-data /var/www/glpi/pics/favicon.ico\nsudo chown www-data:www-data /var/www/glpi/pics/favicon.ico.bkp\nsudo chown www-data:www-data /var/www/glpi/pics/logos/logo-GLPI-100-white.png\nsudo chown www-data:www-data /var/www/glpi/pics/logos/logo-GLPI-100-white.png.bkp\nsudo chown www-data:www-data /var/www/glpi/pics/logos/logo-GLPI-250-black.png\nsudo chown www-data:www-data /var/www/glpi/pics/logos/logo-GLPI-250-black.png.bkp\n</code></pre> </li> </ul> <p>HAY QUE TENER EN CUENTA QUE PARA QUE SE APLIQUE EN SU MOMENTO EL CAMBIO DE LOS LOGOS TENDREMOS QUE ELIMINAR-BORRAR LOS DATOS DEL NAVEGADOR.</p> <p>En este momento ya tenemos instalados todos los componentes para ejecutar GLPI abriendo un navegador contra nuestro GLPI, &lt;http://IP de nuestro servidor y si todo ha ido bien tendremos el asistente de configuraci\u00f3n de GLPI, el cual detallaremos m\u00e1s adelante en un apartado concreto.</p>"},{"location":"Proyecto_final_git/proyecto_final/#73-instalacion-automatizada-de-todo-este-proceso","title":"7.3 - Instalaci\u00f3n automatizada de todo este proceso","text":"<p>Para una instalaci\u00f3n m\u00e1s r\u00e1pida y optimizada de todo el proceso realizado en los puntos 7.2 y 7.3 y para configurar autom\u00e1ticamente algunas funcionalidades clave, podemos utilizar un script.</p> <p>Puedes ver el script aqu\u00ed</p> <p>Descargar el archivo</p>"},{"location":"Proyecto_final_git/proyecto_final/#74-descarga-e-instalacion-de-visual-studio-code","title":"7.4 - Descarga e instalaci\u00f3n de Visual Studio Code","text":"<p>{ width=12% }</p> <ul> <li> <p>Paso 1. Desde la web oficial descargaremos el paquete que corresponda con nuestro SO. https://code.visualstudio.com/download</p> </li> <li> <p>Paso 2. Ejecutaremos el instalador desde el directorio en el cual lo hemos descargado y seguiremos las instrucciones de \u00e9ste, lo cual veremos detalladamente en un apartado aparte para este cometido.</p> </li> </ul>"},{"location":"Proyecto_final_git/proyecto_final/#75-instalacion-de-las-extensiones-en-vscode-para-markdown","title":"7.5 - Instalaci\u00f3n de las extensiones en VScode para Markdown","text":"<p>{ width=12% }</p> <ul> <li>Paso 1. Buscaremos e instalaremos las  extensiones desde la barra lateral izquierda, haciendo clic en el icono de Extensiones.</li> </ul> <p>{ width=35% }</p> <ul> <li> <p>Paso 2. Instalaremos las extensiones esenciales para trabajar con markdown.</p> </li> <li> <p>Markdown All in One:</p> </li> </ul> <p>{ width=40% }</p> <ul> <li>Ofrece funciones como vista previa, atajos de teclado, autocompletado, lista de contenidos, y mucho m\u00e1s.</li> <li> <p>Muy \u00fatil para quienes trabajan extensamente con documentos Markdown.</p> </li> <li> <p>Markdown Preview Enhanced:</p> </li> </ul> <p>{ width=40% }</p> <ul> <li>Esta extensi\u00f3n ampl\u00eda la vista previa est\u00e1ndar de Markdown de VS Code.</li> <li>Permite previsualizar diagramas, f\u00f3rmulas matem\u00e1ticas, archivos PDF, y otros elementos avanzados.</li> <li>Es ideal para documentos Markdown complejos.</li> </ul>"},{"location":"Proyecto_final_git/proyecto_final/#76-instalacion-de-tex-live","title":"7.6 - Instalaci\u00f3n de Tex Live","text":"<p>{ width=20% }</p> <ul> <li>Instalaremos la distribuci\u00f3n de la versi\u00f3n completa que contiene todas las herramientas, ya que necesitamos \"lualatex\" como motor de procesamiento.</li> </ul> <pre><code>sudo apt update\nsudo apt install texlive-full\n</code></pre>"},{"location":"Proyecto_final_git/proyecto_final/#77-instalacion-de-pandoc","title":"7.7 - Instalaci\u00f3n de Pandoc","text":"<p>{ width=20% }</p> <ul> <li>Es el conversor principal que transforma Markdown en PDF.</li> </ul> <p><code>sudo apt install pandoc -y</code></p>"},{"location":"Proyecto_final_git/proyecto_final/#78-instalacion-de-la-plantilla-eisvogel","title":"7.8 - Instalaci\u00f3n de la plantilla Eisvogel","text":"<p>{ width=20% }</p> <ul> <li>Paso 1. Descargaremos la \u00faltima versi\u00f3n de la plantilla desde web \"SOURCEFORGE\".</li> </ul> <p>https://sourceforge.net/projects/eisvogel.mirror/</p> <pre><code>wget https://sourceforge.net/projects/eisvogel.mirror/files/latest/download\n</code></pre> <ul> <li>Paso 2. Descomprimimos la carpeta.</li> <li>Posteriormente eliminaremos el fichero .zip, que no lo necesitaremos.</li> </ul> <pre><code>sudo unzip Eisvogel-&lt;version&gt;.zip\nsudo rm -rf Eisvogel-&lt;version&gt;.zip\n</code></pre> <ul> <li>Paso 3. Copiamos el fichero \"eisvogel.latex\" dentro del directorio donde se encuentre nuestro documento .md.</li> </ul> <pre><code>sudo cp Eisvogel-&lt;version&gt;/eisvogel.latex /ruta al directorio del fichero .md\n</code></pre> <ul> <li>Paso 4. El comando para convertir-compilar el archivo.md  en un archivo.pdf bonito usando Pandoc y LaTex.</li> </ul> <pre><code>pandoc archivo.md -o archivo.pdf \\\n  --from markdown \\\n  --template eisvogel.latex \\\n  --pdf-engine=lualatex \\\n  --listings \\\n  --toc \\\n  --toc-depth=4\n</code></pre> <ul> <li> <p>from markdown: el archivo est\u00e1 en formato Markdown.</p> </li> <li> <p>template eisvogel.latex: usa la plantilla llamada eisvogel para que quede bonito.</p> </li> <li>pdf-engine=lualatex: usa el motor LaTeX llamado lualatex para generar el PDF.</li> <li>listings: mejora c\u00f3mo se ve el c\u00f3digo (usa el paquete listings de LaTeX).</li> <li>toc: a\u00f1ade una tabla de contenido (\u00edndice).</li> <li>toc-depth=4: el \u00edndice puede mostrar hasta 4 niveles de t\u00edtulos.</li> </ul> <p>Para configurar autom\u00e1ticamente de una manera m\u00e1s r\u00e1pida, podemos utilizar el script.</p> <p>Puedes ver el script aqu\u00ed</p> <p>Descargar el archivo</p>"},{"location":"Proyecto_final_git/proyecto_final/#79-instalacion-de-mkdocs","title":"7.9 - Instalaci\u00f3n de MkDocs","text":"<p>{ width=15% }</p> <ul> <li>Paso 1. Instalamos Python.</li> <li>MkDocs est\u00e1 hecho en Python, as\u00ed es que lo necesitamos.</li> </ul> <pre><code>sudo apt update\nsudo apt install python3 python3-pip\n</code></pre> <ul> <li>Paso 2. Instalamos MkDocs con pip.</li> </ul> <p><code>sudo pip3 install mkdocs</code></p> <ul> <li>Paso 3. Instalar \"material\". </li> </ul> <p><code>sudo pip3 install mkdocs-material</code></p> <ul> <li>Luego en nuestro mkdocs.yml a\u00f1adiremos.</li> </ul> <p><code>mkdocs   theme:     name: material</code></p>"},{"location":"Proyecto_final_git/proyecto_final/#710-instalacion-de-git","title":"7.10 - Instalaci\u00f3n de Git","text":"<p>{ width=25% }</p> <ul> <li>Paso 1. Instalamos Git.</li> </ul> <pre><code>sudo apt update\nsudo apt install git\n</code></pre> <ul> <li>Paso 2. Configuraremos Git por primera vez (nuestro nombre y correo).</li> </ul> <pre><code>git config --global user.name \"Edu Yo\"\ngit config --global user.email \"edu@edu.com\"\n</code></pre> <ul> <li> <p>Paso 3. Crearemos una cuenta de GitHub (si no la tenemos).</p> </li> <li> <p>Vamos a : https://github.com/ y creamos ua cuenta.</p> </li> </ul> <p>{ width=25% }</p> <ul> <li>Paso 4. Creamos un repositorio en GitHub desde la web.</li> </ul> <p>{ width=60% }</p> <ul> <li>Paso 5. Generamos un nuevo token.</li> </ul> <p>{ width=80% }</p> <ul> <li>Paso 6. Clonamos el repositorio desde el terminal.</li> </ul> <p>{ width=70% }</p> <p><code>git clone https://github.com/eduherjul/proyecto-GLPI.git</code></p> <p>{ width=100% }</p> <ul> <li>Cada vez que subamos cambios, nos pedir\u00e1 usuario y contrase\u00f1a (o token si usamos 2FA).</li> </ul>"},{"location":"Proyecto_final_git/proyecto_final/#8-asistente-de-configuracion-de-glpi","title":"8 - Asistente de configuraci\u00f3n de GLPI","text":"<p>Paso 1. Si todo ha ido bien tendremos el asistente de configuraci\u00f3n de GLPI, despu\u00e9s de abrir ya un navegador contra nuestro GLPI, algo como http://DIRECCION_IP del servidor, lo primero, escogeremos el idioma a utilizar &amp; OK.</p> <p>Paso 2. Leemos y aceptamos los t\u00e9rminos de la licencia de GLPI &amp; Continuar.</p> <p>{ width=50% } { width=45% }</p> <p>Paso 3. Pulsamos en Instalar ya que estamos instal\u00e1ndolo por primera vez.</p> <p>{ width=50% }</p> <p>Paso 4. Verificamos que cumplimos todos los requisitos y est\u00e1n todos correctos.</p> <p>{ width=45% } { width=45% }</p> <p>Paso 5. Indicamos los datos del servidor de BBDD, indicamos localhost o 127.0.0.1 e indicamos el usuario y contrase\u00f1a de acceso a la BD &amp; Continuar.</p> <p>Paso 6. Seleccionamos la BD que creamos anteriormente, llamada glpi &amp; Continuar.</p> <p>{ width=45% } { width=45% }</p> <p>Paso 7. Si conect\u00f3 e inicializ\u00f3 la BBDD, pulsamos en Continuar.*</p> <p>Paso 8. Podemos voluntariamente si queremos enviar las m\u00e9tricas de uso para que la comunidad de GLPI pueda mejorar el producto, en mi caso como son pruebas desactivar\u00e9 &amp; Continuar.</p> <p>{ width=50% } { width=45% }</p> <p>{ width=45% } { width=45% }</p> <p>Nos indica que existen unas cuentas de usuario ya predefinidas con distintos roles, desactivaremos en un futuro las cuentas y cambiaremos su contrase\u00f1a. Estas cuentas ser\u00edan:</p> \\begin{tcolorbox}[colframe=blue!75!black, colback=yellow!10!white, title=CONTRASE\u00d1AS] \\textbf{Administrador}: \\textcolor{red}{``glpi-glpi''}\\\\ \\textbf{T\u00e9cnico}: \\textcolor{red}{``tech-tech''}\\\\ \\textbf{Cuenta s\u00f3lo lectura}: \\textcolor{red}{``post-only-postonly''}\\\\ \\textbf{Cuenta normal}: \\textcolor{red}{``normal-normal''} \\end{tcolorbox} <p>Inicialmente **Acceso y Contrase\u00f1a* ser\u00e1n glpi*</p> <p>{ width=20% } { width=75% }</p>"},{"location":"Proyecto_final_git/proyecto_final/#9-documentacion-funcional-de-glpi","title":"9 - Documentaci\u00f3n funcional de GLPI","text":""},{"location":"Proyecto_final_git/proyecto_final/#91-crear-usuarios","title":"9.1 - Crear usuarios","text":"<p>Un usuario es una persona que va a usar GLPI. Puede ser:</p> <ul> <li> <p>Un t\u00e9cnico de soporte.</p> </li> <li> <p>Un administrativo que genera tickets.</p> </li> <li> <p>Un responsable que autoriza compras.</p> </li> <li> <p>O simplemente alguien que reporta incidencias.</p> </li> </ul> <p>Opcional pero recomendable:</p> <ul> <li> <p>Seleccionar la entidad a la que pertenece.</p> </li> <li> <p>Darle un perfil (rol):</p> </li> <li>Por ejemplo: \"Self-Service\", \"T\u00e9cnico\", \"Administrador\".</li> </ul> <p>{ width=50% }</p> <p>{ width=50% }</p>"},{"location":"Proyecto_final_git/proyecto_final/#92-gestion-de-perfiles","title":"9.2 - Gesti\u00f3n de perfiles","text":"<p>Un perfil define lo que el usuario puede hacer y ver. Es como un \u201crol\u201d o \u201cpermiso\u201d.</p> <p>Algunos ejemplos que vienen por defecto:</p> <ul> <li>Self-Service: Solo reporta tickets y ve los suyos.</li> <li>Technician: Ve y gestiona tickets asignados.</li> <li>Supervisor: Ve todos los tickets de su grupo.</li> <li>Admin: Tiene acceso completo.</li> <li>Read-Only: Solo puede ver, no tocar nada.</li> </ul> <p>Podemos crear perfiles personalizados, por ejemplo:</p> <ul> <li>Un perfil que solo puede ver inventario.</li> <li>Otro que solo puede aprobar compras, etc...</li> </ul> <p>{ width=50% }</p> <ul> <li>Le asignamos dentro de cada **apartado* los permisos que deseamos para cada perfil o como hemos dicho anteriormente creamos un perfil con permisos personalizados.*</li> </ul> <p>{ width=50% }</p> <p>{ width=30% }</p>"},{"location":"Proyecto_final_git/proyecto_final/#93-generacion-de-codigos-qr","title":"9.3 - Generaci\u00f3n de c\u00f3digos QR","text":"<p>Los c\u00f3digos QR se generan para almacenar y compartir informaci\u00f3n de manera r\u00e1pida y accesible. Su uso es muy amplio y en nuestro proyecto incluir\u00e1:</p> <ul> <li> <p>Enlace al sitio web: Nos facilitar\u00e1 el acceso a las p\u00e1ginas espec\u00edficas sin necesidad de escribir la URL.</p> </li> <li> <p>Informaci\u00f3n de los equipos: Nos proporcionar\u00e1 detalles adicionales de cada equipo.</p> </li> <li> <p>Fichero de Imagen.png: Para guardar en la ficha del equipo inventariado y para adjuntar a fichero de texto para su posterior impresion y etiquetado de este.</p> </li> </ul> <p>En nuestro proyecto a\u00f1adiremos una extensi\u00f3n a nuestro navegador Google-Chrome desde la Web Store de \u00e9ste, en nuestro caso ser\u00e1:</p> <p>{ width=50% } { width=30% }</p> <ul> <li> <p>Caracter\u00edsticas principales:</p> </li> <li> <p>Genera c\u00f3digos QR a partir de texto libre y URLs al instante.</p> </li> <li>Genera un c\u00f3digo QR para tu p\u00e1gina actual con un solo clic.</li> <li>Personalizaci\u00f3n de color y tama\u00f1o.</li> <li>Opci\u00f3n para descargar el c\u00f3digo QR como una imagen (PNG/SVG/C\u00f3digo SVG).</li> </ul> <p>Una vez posicionados en el registro de nuestro dispositivo-equipo, haremos un click en la barra superior del navegador en el icono de nuestra extension.</p> <ul> <li>Se nos abrir\u00e1 la imagen de un c\u00f3digo QR para poderlo descargar y guardar.</li> </ul> <p>{ width=12% } { width=50% }</p> <ul> <li>A continuaci\u00f3n se nos abrir\u00e1 un destino dentro de nuestros directorios para poder elegir una ubicaci\u00f3n o una estructura que para tal motivo tengamos creada y guard\u00e1ndolo para despu\u00e9s imprimirlo.</li> </ul>"},{"location":"Proyecto_final_git/proyecto_final/#94-crear-peticiones-incidencias","title":"9.4 - Crear peticiones (incidencias)","text":"<p>Desde la ficha del usuario nos seleccionamos \"Peticiones creadas\" &gt;&gt; \"Nueva petici\u00f3n para este elemento\".</p> <p>{ width=50% }</p> <p></p> <p>Aqu\u00ed ya detallaremos el tipo, categor\u00eda, estado, urgencia, etc..., que una vez a\u00f1adida se nos plasmar\u00e1 en el panel central.</p> <p></p>"},{"location":"Proyecto_final_git/proyecto_final/#10-impresion-de-codigos-qr-y-almacenamiento-de-este-en-la-bbdd","title":"10 - Impresi\u00f3n de c\u00f3digos QR y almacenamiento de \u00e9ste en la BBDD","text":""},{"location":"Proyecto_final_git/proyecto_final/#101-almacenamiento-de-la-imagen-qr-del-dispositivo-equipo-en-la-ficha-de-este","title":"10.1 - Almacenamiento de la imagen QR del dispositivo-equipo en la ficha de \u00e9ste","text":"<p>En la ficha o registro del activo del elemento seleccionado, escogemos en la barra lateral izquierda la pesta\u00f1a \"Documentos\".</p> <p>{ width=65% }</p> <p>A\u00f1adimos un documento nuevo, en nuestro caso una imagen.</p> <p>{ width=100% }</p>"},{"location":"Proyecto_final_git/proyecto_final/#102-impresion","title":"10.2 - Impresi\u00f3n","text":"<p>Despu\u00e9s de tener almacenados en nuestra estructura de directorios creados para tal efecto los QR, iremos seleccionando uno a uno y transport\u00e1ndolos a una hoja de texto .odt o .docx para ubicarlos en una tabla creada a tal efecto para su posterior impresi\u00f3n en tama\u00f1o A4.</p> <p>{ width=15% }</p>"},{"location":"Proyecto_final_git/proyecto_final/#11-migracion-de-la-aplicacion-glpi-desde-aws-a-proxmox","title":"11 - Migraci\u00f3n de la aplicaci\u00f3n GLPI desde AWS a Proxmox","text":""},{"location":"Proyecto_final_git/proyecto_final/#111-detalle-del-proceso","title":"11.1 - Detalle del proceso","text":"<p>Paso 1 - Hacer backup de la BBDD de GLPI (MariaDB) al $HOME.</p> <p><code>mysqldump -u root -p glpi &gt; $HOME/glpi_backup.sql</code></p> <p>Paso 2 - Comprimir los archivos de GLPI.</p> <p><code>sudo tar -czvf $HOME/glpi_files.tar.gz /var/www/glpi</code></p> <p>Paso 3 - Copiar los archivos desde el $HOME de AWS al directorio (Ejem:$HOME) donde se encuentra la clave_AWS.pem del HOST.</p> <p>Esta operaci\u00f3n la haremos desde el HOST.</p> <pre><code>scp -i $HOME/clave_WS.pem ubuntu@ec2-3-86-189-107.compute-1.amazonaws.com:/home/ubuntu/glpi_backup.sql ./\nscp -i $HOME/clave_AWS.pem ubuntu@ec2-3-86-189-107.compute-1.amazonaws.com:/$HOME/glpi_files.tar.gz ./\n</code></pre> <p>Paso 4 - Creamos una MV de Ubuntu Server con una ISO dentro de Proxmox.</p> <p>Paso 5 - Copiamos los archivos desde el $HOME del HOST al $HOME de Ubuntu Server.</p> <p><code>sudo scp glpi_backup.sql glpi_files.tar.gz $USER@IP_ubuntu_SRV:./</code></p> <p>Paso 6 - Ejecutar todo el punto 7.2 que detallamos anteriormente</p> <p>Tendremos en cuenta al crear el usuario para la BBDD que sea el mismo usuario que el de la BBDD que exportamos.</p> <p>Paso 7 - Restauramos la BBDD.</p> <p><code>mysql -u &lt;user&gt; -p glpi &lt; \"$HOME\"/glpi_backup.sql</code></p> <p>Paso 8 - Descomprimimos los archivos de glpi.</p> <p>Como el archivo descomprimido ya incluye la estructura /var/www/, usamos, --strip-components=2 que elimina los 2 primeros niveles de directorio (var/ y www/) al descomprimir.</p> <pre><code>sudo tar --strip-components=2 -xzvf \"$HOME\"/glpi_files.tar.gz -C /var/www/\nsudo tar -xzvf \"$HOME\"/glpi_files.tar.gz -C /var/www/\nsudo rm -rf \"$HOME\"/glpi_files.tar.gz\nsudo rm -rf /var/www/html/index.html\n</code></pre> <p>Paso 9 -  Damos los permisos correspondientes.</p> <pre><code>sudo chown -R www-data:www-data /var/www/glpi\nsudo chmod -R 755 /var/www/glpi\n</code></pre>"},{"location":"Proyecto_final_git/proyecto_final/#112-proceso-automatizado-de-los-pasos-6-al-9","title":"11.2 - Proceso automatizado de los pasos 6 al 9","text":"<p>Para configurar autom\u00e1ticamente los pasos 6 al 9 de una manera m\u00e1s r\u00e1pida, podemos utilizar el script.</p> <p>Puedes ver el script aqu\u00ed</p> <p>Descargar el archivo</p> <p>Paso 10 - Abrimos el navegador con la \"IP del Servidor\" para acceder a la interfaz de GLPI</p>"}]}